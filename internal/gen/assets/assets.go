// Code generated by go-bindata.
// sources:
// _assets/samples/_imports.go
// _assets/samples/_no_params.go
// _assets/samples/_no_prepared.go
// _assets/samples/_query_exec.go
// _assets/samples/_query_rows.go
// _assets/samples/_query_scalar.go
// _assets/samples/_sample1_yml.go
// _assets/samples/_struct_as_query_params.go
// _assets/samples/imports.yml
// _assets/samples/no_params.yml
// _assets/samples/no_prepared.yml
// _assets/samples/query_exec.yml
// _assets/samples/query_param_validations.yml
// _assets/samples/query_rows.yml
// _assets/samples/query_scalar.yml
// _assets/samples/sample1.yml
// _assets/samples/struct_as_query_params.yml
// _assets/templates/model.tmpl
// _assets/templates/prepared_query_commons.go.tmpl
// _assets/templates/prepared_query_exec.go.tmpl
// _assets/templates/prepared_query_row.go.tmpl
// _assets/templates/prepared_query_rows.go.tmpl
// _assets/templates/prepared_query_scalar.go.tmpl
// _assets/templates/query.tmpl
// _assets/templates/query_exec.go.tmpl
// _assets/templates/query_row.go.tmpl
// _assets/templates/query_rows.go.tmpl
// _assets/templates/query_scalar.go.tmpl
// _assets/templates/struct.go.tmpl
// _assets/templates/struct_validate.go.tmpl
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _samples_importsGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x51\x5d\xaf\x9b\x3c\x0c\xbe\x26\xbf\xc2\x2f\x17\xaf\xe0\x08\xd1\xfb\x4e\xd5\xa4\x1e\x98\x56\x69\x5b\xb7\x52\x69\x97\x6b\x4a\x4c\x97\x0d\x12\x4e\x62\x38\xaa\xaa\xfe\xf7\x39\x50\xf6\xc1\x8d\x65\xf3\xd8\xcf\x47\x56\x2b\xf8\x2c\xeb\x9f\xf2\x82\xe0\x65\xd7\xb7\x08\xbd\xb3\xa3\x56\xe8\x97\xbe\xb3\x0a\xdb\x5c\xf4\xff\xa0\x84\xe0\xc5\x62\x0f\x9f\xf6\x47\x28\x8b\xdd\x71\x0d\xcf\x0c\x83\x0b\x1a\x74\x92\x50\xc1\xf9\x0a\xf1\x8b\xef\xb1\x7e\x2c\xf8\xd5\x5c\xf3\x6b\xd7\xc6\x42\xe8\xae\xb7\x8e\x20\x11\x51\xac\x24\xc9\xb3\xf4\xb8\xf2\x2f\xfc\x27\x8a\x9b\x8e\x62\x91\x0a\x51\x5b\xe3\x27\xc4\xb7\x0a\x5b\xac\xa9\xa2\x8e\x60\x03\xa7\xaa\xfc\x50\x3e\x1f\xe1\x09\xde\x1d\xf6\x1f\xa1\x9a\x45\x7e\x7d\x5f\x1e\x4a\xd8\x15\x0c\x78\xfb\xe6\x14\xd6\x47\xe9\xc2\x72\x90\xb9\x05\x85\x8d\x36\x6c\x89\xbe\x23\x2c\x7c\xdc\x48\x82\x57\xdd\xb6\x70\x46\x18\x3c\x8b\x6e\xac\xe3\xa9\xf6\x8b\xe7\x88\x57\x9f\x58\x56\x5e\x6c\xc3\xc9\x66\x30\x35\x5b\xa4\x62\x9b\xa4\xcb\x1c\x6e\x22\xd2\x4d\xe0\xd8\x6c\xc0\xe8\x36\xf4\x51\x2f\x8d\xae\x93\x98\x87\xc6\x12\x78\xa4\x38\x15\xd1\x5d\x44\x0e\x69\x70\x86\xc1\xe2\x3e\x05\xb8\x6d\xed\x05\x1c\xf6\x0e\x3d\x1a\xf2\x20\xe1\xcc\x93\x5c\xd0\xb5\xc7\xf9\xa7\x27\x37\xd4\x14\x8e\xb2\x37\xfe\xb8\xd7\xe6\x02\xa7\x1f\xde\x9a\x75\xac\x55\x36\x0f\xe2\x93\x88\x8e\x9a\x38\x88\xb9\x7f\xdc\x9f\x83\x63\x01\x53\xe1\x27\xe1\x23\xd2\x28\x98\xa0\xf9\xec\x67\xc6\x24\x5a\x81\x36\x84\xae\x91\x35\xde\xee\x29\x24\x81\x3e\x03\x74\xce\xba\x34\xf0\x87\x3c\xc7\x49\x94\x88\x78\x0a\xeb\xcd\x12\x45\xfe\x65\x40\x77\x3d\xd8\xd7\xe4\xaf\x97\xca\x40\xab\x34\xaf\x6a\x69\x92\xff\xc7\x7c\x57\x64\xc0\x65\xe2\x4d\xa7\xc0\xc2\x89\xff\xfe\x24\xf6\x48\x26\x9c\xbf\xdd\x27\xda\x10\xd8\xef\xc4\xc6\x2c\x20\xd9\xd5\xaf\x00\x00\x00\xff\xff\x7b\x14\x9e\xea\xaf\x02\x00\x00")

func samples_importsGoBytes() ([]byte, error) {
	return bindataRead(
		_samples_importsGo,
		"samples/_imports.go",
	)
}

func samples_importsGo() (*asset, error) {
	bytes, err := samples_importsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "samples/_imports.go", size: 687, mode: os.FileMode(436), modTime: time.Unix(1462707753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _samples_no_paramsGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x53\xcd\x8e\xda\x30\x10\x3e\xc7\x4f\x31\xcd\x61\x95\xac\x50\xb8\x6f\xc5\x05\x42\x25\xa4\xb6\x6c\x81\x7b\x31\xc9\x40\xd3\x26\x76\xb0\x1d\xb6\x08\xf1\xee\x1d\x3b\x0e\x9b\x50\xa9\xad\x5a\xa9\x1c\x30\x1e\xcf\xcc\xf7\x33\xc3\x78\x0c\xcf\x3c\xfb\xc6\x0f\x08\x9a\x57\x75\x89\x50\x2b\x79\x2a\x72\xd4\xdd\xbd\x92\x39\x96\x09\xab\x07\x59\x8c\x51\x61\xba\x84\x8f\xcb\x0d\xcc\xd3\xc5\xe6\x09\x66\x94\x06\x07\x14\xa8\xb8\xc1\x1c\x76\x67\x08\x8f\xba\xc6\xcc\x17\xe8\x71\x7b\x26\xe7\xaa\x0c\x19\x2b\xaa\x5a\x2a\x03\x61\xce\x0d\xdf\x71\x8d\x63\x7d\xb4\xe1\x4c\x0a\x6d\x20\x62\xc1\xe7\x35\x96\x98\x99\xb5\xa9\x0c\x4c\x60\xbb\x9e\xbf\x9f\xcf\x36\xf0\x08\xef\x56\xcb\x0f\xb0\x76\x9d\xde\x6e\x59\xcc\xd8\x89\x2b\x9b\x6f\xd9\x4c\x21\xc7\x7d\x21\x88\xb9\xf9\x82\xd0\x75\xa6\x0b\x37\xf0\x52\x94\x25\xec\x10\x1a\x4d\xdc\xf6\x52\x51\xb4\xd0\x9d\xb4\x80\x4a\x1f\x89\x40\x92\x4e\x6d\xcb\x7d\x23\x32\x52\x62\xd2\x69\x14\x77\x71\xb8\xb0\xa0\xd8\x5b\x8c\xc9\x04\x44\x51\xda\x7b\x50\x73\x51\x64\x51\x48\x41\x21\x0d\x68\x34\x61\xcc\x82\x2b\x0b\x14\x9a\x46\x09\x4a\x66\x57\xe7\x53\xab\x65\x85\xba\x29\x0d\x28\xac\x15\x6a\x14\xa6\xa5\xa9\xda\xa8\xdc\xfb\x2c\x38\x36\xa8\xce\x09\x33\xe7\x1a\x87\x85\xda\xa8\x86\xde\x09\x78\x91\x82\xfb\x50\xa4\x10\x07\xd8\x7e\xd5\x52\x3c\x85\x45\x3e\x6a\x03\xe1\x96\x05\x9b\xc2\xd0\xe8\xba\x14\x16\xcc\xa4\x30\x84\xd9\xdd\xfb\xbc\x88\xb8\x3b\x68\x62\xd4\x98\x8b\x1c\x5c\x71\xd2\xfa\xd0\xe6\x90\x11\x51\x9f\xcc\x08\x50\x29\xa9\x62\xcb\xc6\x4e\xe0\x34\xa0\xca\x02\x7a\x85\xa7\x49\x67\x62\xf2\xc9\x6a\x5a\xc9\x97\xa8\x37\xd6\x38\x59\x67\x5c\x44\x0f\xa7\x64\x91\x8e\x80\x0e\x87\xea\x7e\x79\xb2\xb1\xb3\xdc\xb6\x7a\xf3\xea\xb9\xf7\xb6\x0f\x77\xb9\x3a\x3a\xd6\xfa\x9b\xf7\xa7\x91\xad\xf0\x3a\x9f\xc9\x73\xae\x30\xf7\x7a\xef\x26\x50\xfb\xd7\x9b\x1d\x86\x16\xb8\xa2\x67\x3f\x84\xbb\xea\xd7\x31\x68\xbb\x9c\x6e\x3f\xac\x9e\x21\xd6\x0d\xca\xb2\xf9\x2d\x8e\x73\x7a\x50\x69\x0d\x7f\x1c\x22\xf7\x3d\xb7\xd0\xee\xde\x77\xd9\xa7\x0f\x4c\xfe\x85\x85\x74\xfd\xd9\xb7\x87\x21\xe6\xc5\x02\x5d\xfb\x5e\xce\x4a\x49\xff\xa9\xcc\x7e\xff\x99\xac\xa8\x86\x3b\x21\x71\xdb\x84\x24\x3a\x41\x96\x93\x47\xaf\x13\x8b\x97\xf8\x67\x8f\xe8\x96\x07\xf0\x3b\x66\x8d\xf9\x07\x4c\xd7\xe6\x2f\xf7\xd8\xf3\xba\xad\xf1\x7f\xda\xdd\x1f\x01\x00\x00\xff\xff\xe7\xa2\xd6\x4b\x9c\x05\x00\x00")

func samples_no_paramsGoBytes() ([]byte, error) {
	return bindataRead(
		_samples_no_paramsGo,
		"samples/_no_params.go",
	)
}

func samples_no_paramsGo() (*asset, error) {
	bytes, err := samples_no_paramsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "samples/_no_params.go", size: 1436, mode: os.FileMode(436), modTime: time.Unix(1462707753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _samples_no_preparedGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x93\x4d\x8f\xda\x30\x10\x86\xcf\xf1\xaf\x98\xe6\x50\x25\x2b\x14\xee\x5b\xa1\xaa\x6c\xa8\x8a\xd4\x76\x5b\x40\xea\xb1\x98\x64\x42\xdd\x06\x3b\xd8\x13\x56\x08\xf1\xdf\x3b\xce\xc7\x16\x76\x97\x2d\xbe\x18\x0f\xef\x7c\x3d\x2f\x0c\x87\xf0\x4d\x66\x7f\xe4\x1a\xc1\xc9\x4d\x55\x22\x54\xd6\xec\x54\x8e\xae\x7f\x6f\x4c\x8e\x65\x22\xaa\x33\x95\x10\x9c\x98\xde\xc3\xd7\xfb\x05\x4c\xd2\xe9\xe2\x16\xee\x58\x06\x6b\xd4\x68\x25\x61\x0e\xab\x3d\x84\x5b\x57\x61\xd6\x25\xb8\x61\x7b\x27\xfb\x4d\x19\x0a\xa1\x36\x95\xb1\x04\x61\x2e\x49\xae\xa4\xc3\xa1\xdb\xfa\x70\x66\xb4\x23\x88\x44\xf0\x73\x8e\x25\x66\x34\xa7\x0d\xc1\xe9\x19\xc1\x72\x3e\xf9\x3c\xb9\x5b\xc0\x0d\x7c\x9c\xdd\x7f\x81\x79\x3b\xe4\x8f\x4f\x93\xd9\x04\xa6\x29\x0b\xde\xbf\x5b\x3e\xe6\x8f\xf7\xd3\xf4\x83\xce\x17\x8a\x4a\x6c\x6a\x5d\x99\x1f\x0b\xb1\x93\xd6\x0f\xe2\xd7\x1c\x43\x8e\x85\xd2\x8c\x84\x7e\x21\xf4\x23\xf3\x43\x12\x3c\xa8\xb2\x84\x15\x42\xed\x78\xe9\xc2\x58\x8e\x2a\xd7\x33\x0b\x38\xf5\x86\x37\x4b\xd2\xb1\x2f\x59\xd4\x3a\x63\x44\x94\x8e\xa3\xb8\x8f\xc3\x41\x04\xaa\xf0\x3d\x46\x23\xd0\xaa\xf4\xef\xa0\x92\x5a\x65\x51\xc8\x41\x6d\x08\x1c\x52\x18\x8b\xe0\x28\x02\x8b\x54\x5b\xcd\x62\x71\x6c\x0c\x18\x97\x66\x0d\x16\x2b\x8b\x0e\x35\x39\x90\xb0\xe2\x48\x22\x68\x5f\x61\xfb\xa5\x23\x5b\x67\xe4\x8b\xf2\x6e\x7c\xf8\xad\xf4\x1a\x96\xbf\x9d\xd1\xb7\xa1\xca\x07\x6d\x20\x64\x64\x0d\xa4\x4e\xd0\xd5\x6f\x21\xf2\x00\xcd\xc5\x96\x72\x11\xa9\x73\x68\xa4\x49\xbb\x4f\xab\x89\x54\x0e\x4a\x13\xda\x42\x66\x78\x38\xc6\x10\xf9\xf6\x03\x40\x6b\x8d\x8d\x7d\x7f\xcf\x73\xd7\x0c\x25\x02\x8e\xc2\xed\xa8\x47\x91\x7c\xaf\xd1\xee\x67\xe6\x21\x3a\x71\x7d\x00\x2a\x8f\x93\x79\x26\x75\xf4\x76\x97\x4c\xd3\x01\xf0\xd5\xf4\x8d\x1b\x60\xbe\xc4\x9b\x7f\xc4\x3a\x32\xbe\xfc\xe1\xd8\xb4\xf5\xc0\x1e\x89\xed\x06\x5e\x79\xb6\xd5\xe9\x4f\x63\x86\xae\x2e\xe9\x94\xa4\x37\xda\xb6\x51\x53\xbc\x90\x01\x5b\x3f\x73\x47\xfa\x62\xc1\xa7\xf4\xaf\xe0\xdf\x4b\x44\x70\x67\x98\xa7\xa6\x97\x1c\x39\x9b\xe4\x0a\x77\x4e\xf5\xcf\x9d\xba\x34\xfe\x73\xf7\x2e\x29\xff\xeb\xe8\xd3\xff\xe1\x65\x77\x9b\x4f\xdd\xea\xaf\x39\x7d\x69\x94\x57\xdd\xff\x1b\x00\x00\xff\xff\xf9\x61\x43\xc4\xed\x04\x00\x00")

func samples_no_preparedGoBytes() ([]byte, error) {
	return bindataRead(
		_samples_no_preparedGo,
		"samples/_no_prepared.go",
	)
}

func samples_no_preparedGo() (*asset, error) {
	bytes, err := samples_no_preparedGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "samples/_no_prepared.go", size: 1261, mode: os.FileMode(436), modTime: time.Unix(1462707753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _samples_query_execGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x52\x4b\x6f\xda\x4e\x10\x3f\x7b\x3f\xc5\xfc\x39\xfc\x65\x47\x96\xb9\xa7\x42\x51\xc1\x96\x9a\x4b\x83\x02\x51\x8f\xcd\x62\x0f\xa9\x55\x3f\x96\xdd\x71\x5a\x84\xf8\xee\x9d\xb1\xd7\x14\xa8\xa2\x56\xca\xc5\xeb\xd9\x79\xfc\x1e\xb3\xd3\x29\x2c\x75\xfe\x5d\xbf\x20\x38\x5d\x9b\x0a\xc1\xd8\xf6\xb5\x2c\xd0\x8d\xf1\xae\x43\xbb\x4f\x94\xb9\xa8\x52\x8a\x1b\xd3\x07\xf8\xfc\xb0\x86\x2c\xbd\x5f\xdf\xc2\xa2\x2d\x10\x5e\xb0\x41\xab\x09\x0b\xd8\xec\x61\xb2\x73\x06\x73\xdf\xe0\xa6\xc3\x99\xec\xeb\x6a\xa2\x54\x59\x9b\xd6\x12\x4c\x0a\x4d\x7a\xa3\x1d\x4e\xdd\x4e\xae\xf3\xb6\x71\x04\xa1\x0a\xbe\x3e\x19\x4e\xe1\x8a\x6a\x82\x19\x3c\x3f\x2d\xd3\x8f\xeb\x0c\x56\x03\xf6\x2a\x5b\x2b\x80\xfb\x94\x33\x77\x31\xff\xad\x4b\x62\x9e\x3e\x58\xb4\x0d\x61\x23\x5d\x77\xea\xcb\xa7\xec\x31\xf3\x85\x1f\xd4\xb3\x8a\x94\x7a\xd5\x56\xe6\x0b\xfb\x39\x14\xb8\x2d\x1b\x56\x4a\xdf\x10\x46\x26\x1c\x68\x82\x1f\x65\x55\xc1\x06\xa1\x73\xac\x65\xdb\x5a\xbe\x2d\x1d\xd4\xac\xb1\x4a\x54\xc0\xad\x37\x4c\x38\x49\xe7\x32\x72\xdb\x35\x39\x2b\xa7\x74\x1e\x46\xe3\x3d\x1c\x54\x50\x6e\x05\x63\x36\x83\xa6\xac\x24\x0e\x8c\x6e\xca\x3c\x9c\xf0\x65\xd3\x12\x38\xa4\x49\xa4\x82\xa3\x0a\x2c\x52\x67\x1b\x2e\x56\xc7\xde\xd7\x41\x3b\x74\xfd\x31\xee\x21\x19\x70\x86\x5c\x58\x16\x31\x90\xc8\x8e\x21\xf7\x82\x4b\x3e\xec\x56\xe7\x78\x38\x46\x10\x0a\x8d\x47\x74\x5d\x45\x31\xa0\xb5\xad\x8d\x84\x82\xed\x03\xb8\x9d\x8d\x7c\x93\xec\x27\xe6\xe1\x99\xdb\x31\xfc\x39\x5a\xee\xa2\x13\xcd\x61\x86\xa7\xba\xb4\x68\xb4\xc5\xc2\x53\xe6\xc8\xa2\xe3\x96\xc1\x53\xe3\xb3\xa3\x22\x47\xfc\xad\x39\x9d\x28\xda\x1b\xbc\xee\x76\x64\xbb\x9c\x84\xa7\x93\xbd\xf7\x56\x0a\xa7\x4b\xac\x13\x94\xb0\xf9\x2b\x4e\x6f\xda\x45\x27\x2f\x29\xbc\xb9\x44\x3e\xb7\xc8\xf5\x26\x5c\xb9\xe4\xcb\xcf\x8d\x8a\xfa\x05\x4b\xdd\x7f\xbf\x37\xec\x2d\xe2\x70\x30\x89\xb7\x7b\xf2\xed\xff\x4b\xcc\x83\x00\x1d\x63\xa9\xf5\xfa\x16\x55\xcb\xcf\x2f\x97\xef\xbf\xc9\x0a\x0d\x5c\x09\x89\x86\x21\x2c\xb1\x17\xd4\xaf\x7c\x40\x37\x89\xe0\x25\x3e\xed\x11\x65\xf9\x80\xfc\xe9\xe8\x1d\x90\xfd\x13\x7a\xf7\x83\xf4\x04\xdf\x18\xf6\xc6\x13\xfc\x15\x00\x00\xff\xff\xc2\xf6\x31\xe3\xbe\x04\x00\x00")

func samples_query_execGoBytes() ([]byte, error) {
	return bindataRead(
		_samples_query_execGo,
		"samples/_query_exec.go",
	)
}

func samples_query_execGo() (*asset, error) {
	bytes, err := samples_query_execGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "samples/_query_exec.go", size: 1214, mode: os.FileMode(436), modTime: time.Unix(1462707753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _samples_query_rowsGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x55\x4d\x6f\xda\x40\x10\x3d\x7b\x7f\xc5\x94\x43\x64\x47\xc8\xdc\x13\xa1\xaa\x7c\x54\x45\x6a\x93\x14\x90\x7a\xa8\xaa\x66\xb1\x07\xea\xd6\xac\x9d\xdd\x85\x04\x21\xfe\x7b\x67\xd7\x86\xf8\x23\xa6\xa4\x69\x6e\xe5\x10\xc7\xbb\x33\xf3\xde\xbc\x1d\xbf\xed\x74\xe0\x86\x07\xbf\xf8\x02\x41\xf1\x65\x1a\x23\xa4\x32\x59\x47\x21\xaa\xfd\xfb\x32\x09\x31\xf6\x59\x5a\x8a\x62\x8c\x12\x07\xd7\x70\x75\x3d\x85\xe1\x60\x34\xbd\x80\x3e\x85\xc1\x02\x05\x4a\xae\x31\x84\xd9\x06\x5a\x77\x2a\xc5\x20\x4f\x50\x9d\xec\xe9\x6f\x96\x71\x8b\xb1\x68\x99\x26\x52\x43\x2b\xe4\x9a\xcf\xb8\xc2\x8e\xba\x33\xcb\x41\x22\x94\x06\x97\x39\xdf\x27\x18\x63\xa0\x27\x7a\xa9\xa1\xf8\xeb\xc2\xed\x64\xf8\x71\xd8\x9f\xc2\x39\xbc\x1f\x5f\x7f\x82\x49\x46\xf2\xcb\x87\xe1\x78\x08\xa3\x01\x05\xbc\xbd\xbc\x3d\xe4\xf7\x36\xa3\xc1\x3b\x11\x4e\x23\x1d\xa3\xad\x75\x62\xbe\xc7\xd8\x9a\x4b\x43\xc4\xb4\xd9\x83\x10\xe7\x91\x20\x49\xf4\x0f\x84\x3d\x65\x7a\xe1\x1a\xee\xa3\x38\x86\x19\xc2\x4a\x51\xd3\xf3\x44\xd2\x6a\xa4\xf6\x9a\x39\x94\x7a\x4e\x9d\xf9\x83\x9e\x29\x39\x5f\x89\x80\x24\xd2\x83\x9e\xeb\xed\xd7\x61\xcb\x9c\x68\x6e\x30\xba\x5d\x10\x51\x6c\xde\x9d\x94\x8b\x28\x70\x5b\xb4\x28\x12\x0d\x0a\x75\xcb\x63\xce\x8e\x39\x12\xf5\x4a\x0a\x0a\x66\x3b\x7b\x00\xbd\x38\x59\x80\xc4\x54\xa2\x42\xa1\x15\x70\x98\xd1\x8a\xcf\xf4\x26\xc5\x6c\x53\x69\xb9\x0a\xb4\x29\x4a\xbd\xd1\x8f\xde\x23\xb1\x80\xdb\x9f\x2a\x11\x17\xad\x28\x6c\x67\x0b\x2d\x92\xcc\x8a\x94\x07\xe4\xf5\x33\x11\x89\x80\x7d\xd0\x91\x52\x11\x2e\x42\xb0\xa1\x7e\xd6\x4f\x16\xe3\x46\x21\x44\x42\xa3\x9c\xf3\x00\xb7\x3b\x0f\x5c\x03\xdf\x06\x94\x32\x91\x9e\xc1\x37\x7a\xae\x2d\x29\xe6\xd0\x2a\x5c\x74\xf7\x52\xf8\x9f\x57\x28\x37\xe3\xe4\xde\x2d\x9c\x7a\x1b\xa2\xd0\xf3\x27\x01\x17\xee\xd9\xda\x1f\x0d\xda\x40\x0f\x8b\xeb\x59\xc1\x4c\x89\x37\x8f\x8a\xe5\xca\x98\xf2\xdb\x9d\x85\x35\x82\x1d\x14\x5b\xb7\x4d\x64\xde\xd5\x0d\x29\xc6\x25\x86\x79\x77\x05\xfd\xcc\xf1\xa6\xf9\xee\xa1\x79\x4d\xf3\xbc\xa4\xed\x5c\xd6\x4a\xf6\xa3\xc0\xca\xcc\x97\x3d\x55\xc3\xbf\x8c\x75\x80\x32\x6c\xfe\x88\x63\x75\x2d\x65\xd2\xbc\xb8\xe7\x65\xe4\xa2\xb6\xca\x0a\x56\x51\x35\x0f\x2f\x8a\x7a\x4c\x3a\x7a\xad\xeb\x76\x56\xc6\xdc\x1a\xa0\x5d\x51\xcb\x7e\x9c\xd0\x97\x10\x98\xbf\xa7\xb5\xe5\xa6\x50\x69\xc4\xcb\x8a\x50\x8b\xb6\x21\xc3\x29\x47\x4f\x7d\x83\xe7\xe7\xdb\x39\xa2\x1d\x16\xc0\x07\x0c\x56\xfa\x05\x98\xb6\xcc\x5f\x4d\x6d\xce\xea\x30\xb4\xaf\x36\xa7\x75\x0b\x1b\xa3\x5a\xc5\xb5\x89\x95\xd9\x6a\x32\x7f\x22\x03\xee\x0c\xcd\x7c\x74\x1b\x0b\x56\x5d\xe2\x04\x9f\xd8\x87\x30\xa7\x9f\x90\x82\x42\x3f\xe5\x1c\x25\x26\x27\xb8\x48\x31\xbe\x7e\x36\x5f\xbf\x35\x35\x50\x3d\x31\x0e\xcd\xb1\xa4\x75\x72\xaf\x6a\x5f\x4b\x36\x0f\x0d\xd7\x86\x35\xa3\x13\xbf\x1d\x87\xee\x0a\x94\x60\x40\x0e\x93\xcb\x1c\x73\x33\xd8\xa5\x2b\x7c\x30\x5f\xb3\x49\xce\x66\xab\x99\xe7\x1e\x8f\x58\xda\xd4\xa7\x86\xcc\xfe\x97\x9f\x80\x77\x59\xa5\x57\xe7\x67\x08\x3a\x9c\x6e\x39\x9e\xa6\x28\x42\x97\xb7\x61\x9d\xdd\x2d\x15\xb0\xa1\x94\x6e\xbd\xe0\x31\xaf\xe0\xcd\x1e\x5b\x9a\x83\xe3\x7e\x5b\x1e\x99\xa3\xde\x5b\x09\x3d\xdd\x87\x2b\x74\x1a\x3d\xb9\x89\x4b\xdd\x9f\x4b\x83\x5b\xf7\xea\xe2\xf6\x73\x7d\xbb\x3a\x8b\x2f\xf5\xf0\x62\xbd\xe7\xfb\xf9\x51\x49\xea\x3e\x5b\x0c\xff\xe7\x3e\xff\x22\x2e\x0d\xfe\xff\x2a\x1e\x53\xbc\x31\xdc\xff\x4e\x72\xba\x93\xfc\x0e\x00\x00\xff\xff\x9a\x0a\x3a\x00\x9d\x0c\x00\x00")

func samples_query_rowsGoBytes() ([]byte, error) {
	return bindataRead(
		_samples_query_rowsGo,
		"samples/_query_rows.go",
	)
}

func samples_query_rowsGo() (*asset, error) {
	bytes, err := samples_query_rowsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "samples/_query_rows.go", size: 3229, mode: os.FileMode(436), modTime: time.Unix(1462707753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _samples_query_scalarGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\x4d\x6f\xda\x40\x10\x3d\x7b\x7f\xc5\x94\x43\x64\x47\x91\xb9\x54\x3d\xa4\x42\x95\x02\x54\xad\xd4\x86\x34\x50\xf5\xd8\x2c\xf6\x90\x5a\xf5\x57\x76\xd7\xa4\x28\xe2\xbf\x77\x66\xf1\x3a\x76\x68\x28\x09\x70\x30\xda\xdd\x99\x79\x6f\xde\xce\xdb\x7e\x1f\xae\x64\xf4\x5b\xde\x22\x68\x99\x95\x29\x42\xa9\x8a\x65\x12\xa3\x76\xeb\xbb\x0a\xd5\x2a\x14\x65\x27\x4a\x08\x4a\x1c\x4d\xe0\x72\x32\x83\xf1\xe8\xf3\xec\x1c\x86\x45\x8c\x70\x8b\x39\x2a\x69\x30\x86\xf9\x0a\x7a\x77\xba\xc4\xa8\x4e\xd0\xfd\xcd\x7f\xb8\xca\xd2\x9e\x10\x49\x56\x16\xca\x40\x2f\x96\x46\xce\xa5\xc6\xbe\xbe\xe3\xed\xa8\xc8\xb5\x01\x5f\x78\x3f\x87\x45\x95\x9b\xa9\xc9\x0c\xb8\xdf\x00\x6e\xa6\xe3\x2f\xe3\xe1\x0c\x86\x93\xef\x97\x33\xff\x34\x80\x8f\xd7\x93\xaf\x30\xb5\x75\xdf\xdf\xb8\xa4\x51\xa2\xe5\x3c\xc5\xd8\x26\xef\x4e\x82\x1f\x9f\xc6\xd7\x63\x88\xeb\x0c\x8a\xfe\x40\x75\x02\x21\x96\x52\x31\x0b\xee\xf1\x02\x62\x5c\x24\x39\xe9\x61\x7e\x21\x38\xbe\xb4\x90\x06\xee\x93\x34\x85\x39\x42\xa5\x29\x79\x51\x28\xda\x4d\x34\x64\xa4\x44\x1a\x0a\x8f\x52\x4f\xa9\xad\x70\x74\xc1\x25\x17\x55\x1e\x91\x3e\x66\x74\xe1\x07\x6e\x1f\x1e\x84\x97\x2c\x18\x63\x30\x80\x3c\x49\x79\xed\x95\x32\x4f\x22\xbf\x47\x9b\x79\x61\x40\xa3\xe9\x05\xc2\x5b\x0b\x4f\xa1\xa9\x54\x4e\xc1\x62\x6d\xd5\xb7\xcd\x42\xc4\x5f\x77\x57\xe1\x06\xc5\x9e\x10\x8a\x9f\xe4\xe6\xdd\xdb\x33\x40\xa5\x0a\x15\x70\x71\xee\x6b\x09\x76\x5b\x78\xb4\x0d\xe7\x03\xc7\x29\xfc\xc6\xf7\x7c\x5d\xdc\xfb\x8f\xda\x07\xe1\x34\x92\xb9\x7f\xb2\x0c\x2c\x4f\x4e\x78\xf3\x48\xb4\x26\xb4\xb4\x00\x4c\x51\xb4\xb6\x28\xa8\xe6\x79\xa5\xb0\x94\x0a\xe3\x0d\x5f\x5a\x28\xd4\xc8\x9c\x59\xcf\xb2\x3e\xac\xbb\xd1\x86\x86\x27\xa3\xd3\x50\x98\x55\x89\x4f\x72\xb5\x51\x55\x64\x18\x5b\xf3\xdd\x5a\x11\x99\x66\x17\xc8\xe1\x30\x93\xff\x81\x58\xb9\xda\x79\xac\xda\x69\x07\xb5\x2d\x1f\xc3\xda\x75\x5b\xb7\x3a\xba\x2d\xdb\x0e\xb5\x68\xb9\xad\xd7\x49\x07\xf1\x81\x61\xd6\x6d\x09\x87\x69\x41\x23\x17\xf1\x77\xaf\x8e\xfc\x12\xba\x4d\x04\x9b\x12\xd4\x9d\x6d\x86\x09\xd5\xd0\x65\xc8\x68\x61\x7d\x5c\xe3\xd9\x51\x00\xfc\x83\x51\x65\x5e\x8d\x68\x8b\xec\x3d\x85\x35\x8f\x66\x08\x8f\x32\x7a\x9d\xf7\xa0\x6b\x15\x7e\xa0\x9c\xef\xdb\xb6\x71\xd1\x7e\xf3\x28\x10\x4f\x54\x0b\x19\xe1\xc3\xfa\x40\x4b\xb5\x5f\xa6\xb3\x06\xfd\xf8\x26\x6b\x3a\xde\x69\xb6\x26\x6a\xa7\xe9\x5a\x51\x7b\x9b\xaf\x85\xff\x9c\x09\xff\x05\xbe\x65\xc6\xe6\x2e\xb6\x4c\xe9\x4e\x5e\x68\xce\xf6\x05\x1c\x68\x52\x57\xea\xc5\x66\x7d\xb6\xf3\x2d\x0b\xb9\xc8\x63\x9b\xf7\x35\x0c\x36\x66\x3e\xc4\x13\x4f\x0d\x7e\xb4\xf1\xff\x1b\x00\x00\xff\xff\xc3\x81\x83\x31\xc2\x08\x00\x00")

func samples_query_scalarGoBytes() ([]byte, error) {
	return bindataRead(
		_samples_query_scalarGo,
		"samples/_query_scalar.go",
	)
}

func samples_query_scalarGo() (*asset, error) {
	bytes, err := samples_query_scalarGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "samples/_query_scalar.go", size: 2242, mode: os.FileMode(436), modTime: time.Unix(1462707753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _samples_sample1_ymlGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x55\x4b\x6f\xe2\x48\x10\x3e\xbb\x7f\x45\x2d\x87\xc8\x8e\x90\xb9\x67\x85\x56\xcb\x63\xb5\x48\xbb\x93\x0c\x20\xcd\x71\xd2\xd8\x05\xe3\x19\xd3\x76\xba\x1b\x32\x08\xf1\xdf\xa7\xba\xdd\x10\x3f\x62\x42\x26\x89\x0f\x71\xba\xba\x1e\x5f\x7d\x55\xfe\xe8\xf5\xe0\x8e\x47\x3f\xf8\x0a\x41\xf1\x75\x9e\x22\xe4\x32\xdb\x26\x31\xaa\xe3\x79\x9d\xc5\x98\x86\x2c\xaf\x78\x31\x46\x81\xa3\x5b\xf8\x74\x3b\x87\xf1\x68\x32\xbf\x81\x21\xb9\xc1\x0a\x05\x4a\xae\x31\x86\xc5\x0e\x3a\x0f\x2a\xc7\xc8\x05\xa8\x5e\xf1\x0e\x77\xeb\xb4\xc3\x58\xb2\xce\x33\xa9\xa1\x13\x73\xcd\x17\x5c\x61\x4f\x3d\x18\x73\x94\x09\xa5\xc1\x67\xde\xd7\x19\xa6\x18\xe9\x99\x5e\x6b\x28\x3f\x7d\xb8\x9f\x8d\xff\x1b\x0f\xe7\x70\x0d\xff\x4c\x6f\xff\x87\x59\x01\xf2\xcb\xbf\xe3\xe9\x18\x26\x23\x72\xf8\xeb\xcf\xfb\x53\xfc\x60\x37\x19\xfd\x2d\xe2\x79\xa2\x53\xb4\xb9\x2e\x8c\x0f\x18\xdb\x72\x69\x80\x98\x36\x07\x10\xe3\x32\x11\x44\x89\xfe\x86\x70\x84\x4c\x07\xae\xe1\x31\x49\x53\x58\x20\x6c\x14\x35\xbd\xcc\x24\x59\x13\x75\xe4\xcc\xa3\xd0\x6b\xea\x2c\x1c\x0d\x4c\xca\xe5\x46\x44\x44\x91\x1e\x0d\xfc\xe0\x68\x87\x3d\xf3\x92\xa5\xa9\xd1\xef\x83\x48\x52\x73\xf6\x72\x2e\x92\xc8\xef\x90\x51\x64\x1a\x14\xea\x4e\xc0\xbc\x03\xf3\x24\xea\x8d\x14\xe4\xcc\x0e\x76\x00\x83\x34\x5b\x81\xc4\x5c\xa2\x42\xa1\x15\x70\x58\x90\x25\x64\x7a\x97\x63\x71\xa9\xb4\xdc\x44\xda\x24\xa5\xde\xe8\xa1\x73\x22\x56\x70\xff\x5d\x65\xe2\xa6\x93\xc4\xdd\xc2\xd0\x21\xca\x2c\x49\xce\xc1\xe5\x2f\x48\x24\x00\xf6\x45\x23\xa5\x24\x5c\xc4\x60\x5d\xc3\xa2\x9f\xc2\xc7\x4f\x62\x48\x84\x46\xb9\xe4\x11\xee\x0f\x01\xf8\xa6\x7c\x17\x50\xca\x4c\x06\xa6\xbe\xe1\x73\x6b\x41\x31\x8f\xac\x70\xd3\x3f\x52\x11\x7e\xde\xa0\xdc\x4d\xb3\x47\xbf\x34\xf5\x2e\x24\x71\x10\xce\x22\x2e\xfc\xab\x6d\x38\x19\x75\x81\x5e\xb6\x6e\x60\x09\x33\x29\xfe\x78\x62\xcc\x31\x63\xd2\xef\x0f\xb6\xac\x21\xec\xc4\xd8\xb6\x6b\x3c\x5d\x57\x77\xc4\x18\x97\x18\xbb\xee\x4a\xfc\x99\xf1\xe6\xee\xf6\xd4\xbc\xa6\x7d\x5e\xd3\xb5\xa3\xb5\x16\xfd\x44\xb0\x32\xfb\x65\xa7\x6a\xf0\x57\x6b\x9d\x4a\x19\x34\x2f\xd6\xb1\xbc\x56\x22\x69\x5f\xfc\xeb\x6a\xe5\x32\xb7\xca\x12\x56\x63\xd5\xb9\x97\x49\x3d\x47\x1d\x1d\x9b\xbc\x5d\x55\x6b\xee\x4d\xa1\x43\x99\xcb\x61\x9a\xd1\x97\x10\x99\xbf\x97\xb5\xe5\xe7\x50\x6b\x24\x28\x92\x50\x8b\xb6\x21\x83\xc9\x55\xcf\x43\x53\x2f\x74\xd7\xae\xa2\x5d\x16\xc0\x9f\x18\x6d\xf4\x1b\x6a\xda\x34\xbf\xb5\xb5\x0e\xd5\x69\x69\x3f\x6c\x4f\x9b\x12\x36\x45\xb5\x49\x1b\x1b\x2b\x0b\x6b\xb6\x7c\x26\x02\x1e\x0c\x4c\xb7\xba\xad\x09\xeb\x2a\x71\x81\x4e\x1c\x5d\x98\x37\xcc\x88\x41\xa1\x9f\x53\x8e\x0a\x92\x0b\x54\xa4\xec\xdf\x9c\x4d\x1b\xfc\xe6\xbc\xda\x3c\x5f\x54\x9e\xfa\xef\x45\xbb\x0a\xd9\xff\x5c\xeb\xe7\x26\xdd\x06\xe5\x95\x2a\x55\x61\xf2\xbc\x62\x55\x49\x3f\xab\x5e\x35\xd7\xcb\x95\xac\x06\xa7\x55\xd5\xda\xb0\x34\x15\xae\x32\xfa\xa6\xda\x95\xaf\x5f\xab\x7c\xf5\xa1\xbe\x55\x05\xcb\xf9\x5e\xaf\x88\x67\x29\x69\x2a\x55\xd9\xfd\xdd\x95\xf2\x4d\x58\x5a\x14\xf4\x1d\xbf\xd2\x4b\x95\xf6\x43\xbf\xc5\x5f\x01\x00\x00\xff\xff\x3e\xf2\x57\x7e\x21\x0b\x00\x00")

func samples_sample1_ymlGoBytes() ([]byte, error) {
	return bindataRead(
		_samples_sample1_ymlGo,
		"samples/_sample1_yml.go",
	)
}

func samples_sample1_ymlGo() (*asset, error) {
	bytes, err := samples_sample1_ymlGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "samples/_sample1_yml.go", size: 2849, mode: os.FileMode(436), modTime: time.Unix(1462707753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _samples_struct_as_query_paramsGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x93\xcf\x6f\xd3\x30\x14\xc7\xcf\xf1\x5f\xf1\xc8\x29\x41\x53\x2a\x2a\xc4\x61\xa8\x42\x8c\x44\x62\x17\x56\xd6\x0e\x8e\xd4\x4d\x5e\x3b\x43\xe2\xb8\xb6\xd3\x11\x4d\xfb\xdf\x79\x8e\x93\x74\x99\x04\x12\x1a\x12\xb9\xc4\x7e\xbf\x3f\xdf\xbc\xcc\x66\xb0\xe4\xf9\x0f\xbe\x47\x30\xbc\x52\x25\x82\xd2\xf5\x51\x14\x68\x86\xfb\xa1\x41\xdd\x26\x4c\x4d\xa2\x18\xa3\xc4\xf4\x0a\x3e\x5d\xad\x21\x4b\x2f\xd7\xe7\xf0\xa1\x2e\x10\xf6\x28\x51\x73\x8b\x05\x6c\x5b\x08\x0f\x46\x61\xde\x27\x98\x99\x7f\x27\x6d\x55\x86\x8c\x89\x4a\xd5\xda\x42\x58\x70\xcb\xb7\xdc\xe0\xcc\x1c\x9c\x39\xaf\xa5\xb1\x10\xb1\xe0\xdb\x8d\x22\x17\xbe\x5a\xd9\xca\xc2\x02\x36\x37\xcb\xf4\xfd\x3a\x83\x95\x6f\xbe\xca\xd6\x0c\xe0\x32\x25\xcf\xbb\x33\x3a\x7d\x6e\xb8\xb4\xc2\xb6\xee\xce\xbe\x7e\xcc\xae\xb3\xde\xf9\x96\x6d\xc6\x5a\xf3\x7f\x50\x2b\x66\xec\xc8\xb5\x1b\xd0\xe1\x5f\x40\x81\x3b\x21\x49\x2a\x7b\x8b\x30\xa0\xd0\x85\x5b\xb8\x13\x65\x09\x5b\x84\xc6\x90\x18\xbb\x5a\x93\x55\x18\xa8\x48\xa4\x32\x61\x01\xa5\xbe\x24\xe2\x24\xbd\x70\x25\x77\x8d\xcc\x49\x3a\x9b\x5e\x44\xf1\x60\x87\x7b\x16\x88\x9d\xeb\xb1\x58\x80\x14\xa5\xbb\x07\x8a\x4b\x91\x47\x21\x19\x65\x6d\xc1\xa0\x0d\x63\x16\x3c\xb0\x40\xa3\x6d\xb4\xa4\x60\xf6\xd0\x7d\x18\x8f\xb6\xb2\xba\xc9\x2d\x50\x5b\x3e\x7c\x4b\xd3\x99\x12\x66\x5b\x85\xd3\x28\xef\x71\x5d\x88\xd6\x3f\x64\x12\x72\x0f\x9b\xef\xa6\x96\xe7\xa1\x28\x42\xd2\x72\x54\x47\x48\xfb\xe6\x35\x0c\xce\x83\x6d\xc9\xeb\x9b\x7f\xe1\xa5\x70\x7a\x83\x9f\xca\x00\x6a\x4d\xfc\x77\xb7\x28\x49\x88\x46\x16\x94\x7b\x74\x31\x9d\x62\x89\xa7\x8f\xd4\x64\x9c\x78\xac\x42\x8a\xf8\xfc\xfb\x11\x93\xd4\xe8\x5b\xf5\x4b\xb2\xe4\x9a\x57\x86\xfa\x29\x8d\x06\xa5\x35\x7e\x67\x41\x39\x3b\x5a\xd4\x06\xea\xdd\x10\xdc\xc3\x4f\x53\x7f\x4b\xff\x94\xf8\x99\x8c\x93\xae\x7f\x07\x09\x4d\xf7\x1e\x7e\xcb\xbe\x66\xef\x8c\x94\xe7\x78\x52\x3f\x72\xbb\x74\x8d\xa6\x29\xed\x99\xef\x10\xbb\x16\x74\x82\xf3\x85\x97\xc7\x24\xa7\x21\xba\x8d\x73\xce\x17\xa7\x95\x3b\x8d\xd3\x55\x70\xeb\x46\x33\x76\x67\x57\xa3\xdf\xda\x24\xfb\x89\x79\xf4\xf8\xa7\x3d\x1b\xca\x5f\xa6\xe3\x71\x90\xf2\x91\x2f\x1e\x81\x7d\xcd\x09\xf3\xfc\x4f\xcc\xf3\x81\x79\xba\x37\xff\x07\x79\xfe\x3c\xe4\x5f\x01\x00\x00\xff\xff\x6c\xae\xb0\x18\x85\x05\x00\x00")

func samples_struct_as_query_paramsGoBytes() ([]byte, error) {
	return bindataRead(
		_samples_struct_as_query_paramsGo,
		"samples/_struct_as_query_params.go",
	)
}

func samples_struct_as_query_paramsGo() (*asset, error) {
	bytes, err := samples_struct_as_query_paramsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "samples/_struct_as_query_params.go", size: 1413, mode: os.FileMode(436), modTime: time.Unix(1462720956, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _samplesImportsYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x50\xd1\x4a\x03\x31\x10\x7c\xcf\x57\x0c\x7d\x29\x88\xed\x07\x9c\x88\xa0\x9e\x28\x28\xc2\x5d\xc1\xe7\xf4\xb2\x3d\x22\xc9\x25\x26\x7b\x4a\xff\xde\x5c\x72\x57\x5a\xe8\x53\x98\xdd\x9d\xc9\xcc\x28\x8a\x5d\xd0\x9e\xb5\x1b\x2a\xf8\xe0\x7e\x75\x9a\x20\x4a\xeb\x0d\xc1\x3a\x45\x66\x2b\x84\xb6\xde\x05\x8e\x95\xd8\xe0\x60\x59\x88\xc8\x61\xec\x26\x0c\x3c\x1a\xd7\x4f\x2f\x70\xa1\x14\xc8\x07\x8a\x34\x70\x84\xc4\x3e\xdd\x6c\xf3\xcd\x41\x93\x51\xb1\xdc\x6f\x30\x48\x4b\x15\xde\x9e\x33\x04\xf8\xe8\x13\x4c\xda\x7a\xe8\x97\x91\xec\x2b\xac\xbf\x63\x92\x5c\x69\x75\x5b\x76\xab\xf5\x05\x7f\xa7\xd9\xd0\x35\x09\xf1\x33\x52\xd0\x94\xbf\x6b\xc9\x50\xc7\x57\x8c\xc6\xbc\xc0\xfe\x98\x7c\x40\x0e\xaa\xc8\x15\xb7\x91\x25\x93\x4d\x21\x2a\xb4\xf5\x7b\xfd\xb4\xc3\x0d\x5e\x9a\xcf\x0f\xb4\xa5\x9e\xaf\xd7\xba\xa9\x27\xde\x3d\x1e\xb4\xba\xcb\x9c\x94\x7a\x34\xf3\x47\x8b\x9f\xc6\xfd\xcd\xb8\x14\xb7\x6c\x31\x27\x98\x3a\x3c\x8d\xce\x2b\x2a\x31\x4f\x05\x4d\xa0\xa4\xfd\x0f\x00\x00\xff\xff\xed\x63\x6b\x7d\xb6\x01\x00\x00")

func samplesImportsYmlBytes() ([]byte, error) {
	return bindataRead(
		_samplesImportsYml,
		"samples/imports.yml",
	)
}

func samplesImportsYml() (*asset, error) {
	bytes, err := samplesImportsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "samples/imports.yml", size: 438, mode: os.FileMode(436), modTime: time.Unix(1462707753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _samplesNo_paramsYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x8f\x5d\x4a\x03\x31\x14\x85\xdf\xbb\x8a\x43\x5f\x0a\xa2\x5d\x40\x7c\x6c\x2b\x14\x14\xa1\xd3\x0d\xc4\xe6\x58\x22\x99\x24\xde\x7b\x47\xe9\xee\x1d\xe3\x0c\xa2\x88\x6f\xc9\xf9\xbe\xfb\x17\xa8\x27\x89\xd5\x62\xc9\x0e\x55\xca\x5b\x1c\x13\xa8\xef\x6b\x22\xfa\x12\x98\xd6\x8b\xd7\x81\x12\xa9\x6e\x01\x74\x4c\x3c\xd9\xe7\x0b\xf8\x51\xaa\x0d\xe0\xe9\x82\xfd\x16\x3e\x07\x1c\xa3\x25\xae\x9b\xa8\xe6\x8d\x3d\xb3\x39\x74\xbb\xfb\xdd\xe6\x88\x2b\xdc\x1d\x1e\x1f\xd0\xb5\x31\xb7\x4d\xaa\xc2\xea\x85\xc1\xc1\x64\x60\x8b\x84\x3a\xa4\x69\x18\x60\x97\x4a\x87\x43\x79\x9f\xfe\xcf\x91\x29\xe8\x4c\x6f\x90\x7d\x3f\xf2\xfd\x76\x0a\xe6\x02\x35\x89\xf9\xfc\x1d\xfa\xb3\xc3\xea\x45\xc7\x9d\x97\x31\x5c\x7f\xd1\xe5\xea\x57\x97\xb6\xfc\x7f\x8d\x66\x71\x53\xb2\x8d\x87\xfd\xad\x7e\x04\x00\x00\xff\xff\x64\xb1\xba\x42\x5c\x01\x00\x00")

func samplesNo_paramsYmlBytes() ([]byte, error) {
	return bindataRead(
		_samplesNo_paramsYml,
		"samples/no_params.yml",
	)
}

func samplesNo_paramsYml() (*asset, error) {
	bytes, err := samplesNo_paramsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "samples/no_params.yml", size: 348, mode: os.FileMode(436), modTime: time.Unix(1462707753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _samplesNo_preparedYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x51\x51\x4b\xf4\x30\x10\x7c\xef\xaf\x18\xee\xe5\xe0\xe3\xf3\x7e\x40\x45\xc4\xbb\xab\x78\xa0\x08\xed\x81\xcf\xb9\x66\x2d\x91\x34\xa9\x49\xaa\xf4\xdf\x9b\x26\x6d\xb1\x18\x7c\xf5\x29\xec\xee\xec\x64\x66\x96\x93\xad\x8d\xe8\x9c\xd0\x2a\x47\x67\xf4\x87\xf0\x1d\x58\xd6\x76\x92\xd0\x6a\x4e\x72\x97\x59\x67\xfa\xda\xd9\x3c\x03\xf6\x52\x37\xe3\x0b\xac\x16\x0d\x75\x86\x2c\x29\x67\xc1\x70\xf1\x98\x5d\xc0\xbc\x0a\x92\xdc\x46\xfc\x15\x14\x6b\x29\xc7\xe9\x18\x4a\xc0\x0d\x9d\x2f\x3d\xb7\x50\xcd\xdc\x62\x4d\x8e\xed\x9b\xf5\x94\x1b\xc1\xff\xc7\xd9\x66\xbb\xda\x3f\x0b\x27\x29\x45\x91\xbd\xf7\x64\x04\x85\xef\x2a\x92\x54\xbb\x84\x50\x1b\x06\xb8\x0c\x5e\x07\x98\xe2\x91\x2e\xaa\xb5\x8e\x39\x6a\xbd\x89\x1c\x55\xf1\x58\x1c\xce\xf8\x87\xfb\xf2\xf9\x09\x55\x4c\xe3\xe5\xa1\x28\x8b\x71\xef\x06\xb7\x82\x5f\x87\x1d\xef\xba\x97\xd3\x47\xb3\x9e\x52\x7f\x4e\x75\x0c\x6e\x9e\x62\x72\x30\x66\xb8\xb4\xbe\x47\x14\x6d\x2e\x01\x8d\x45\x74\xbb\x38\xda\x0f\xa7\xe3\x9d\xe2\xa1\xfb\xe7\xee\xd6\xd2\x7f\xdc\x37\x79\xe1\xdf\x6f\x9c\xbe\x72\x92\x68\x06\x1e\xb4\x72\xde\x54\x1a\xfa\x15\x00\x00\xff\xff\x9e\xee\xea\x6a\xdd\x02\x00\x00")

func samplesNo_preparedYmlBytes() ([]byte, error) {
	return bindataRead(
		_samplesNo_preparedYml,
		"samples/no_prepared.yml",
	)
}

func samplesNo_preparedYml() (*asset, error) {
	bytes, err := samplesNo_preparedYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "samples/no_prepared.yml", size: 733, mode: os.FileMode(436), modTime: time.Unix(1462707753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _samplesQuery_execYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\x41\x6a\xc3\x30\x10\x45\xf7\x3e\xc5\x3f\x40\xf1\x01\x54\x4a\x29\xb5\xa0\xdd\x84\x10\x3b\x64\x6d\xac\x59\x08\x6c\x49\x91\x46\x01\x43\x0e\x1f\x49\x56\x1c\xb2\xd2\xe7\xfd\x79\xa3\x51\x14\x26\xaf\x1d\x6b\x6b\x04\x9c\xb7\x37\x9d\x08\xc2\xb8\xb8\x99\x70\x8d\xe4\xd7\xb6\xc9\x8f\xa6\x20\x1a\xe0\xec\xd4\xc8\x94\x13\xf0\xa6\xc6\x52\x3c\xcd\xb6\x0c\x04\x4e\x68\x21\xc3\x02\xf7\x02\x92\x7f\xec\x7e\x06\x89\xbe\x4c\x55\xd6\xcb\xa1\x26\xe0\xbf\xc3\x17\xbe\xb5\xfa\xd8\xc9\xa0\x39\x5d\x92\x20\xe7\xf0\xe2\xbf\xd6\x70\x5a\x9d\x9b\x69\x8b\xb5\xba\xfc\xc9\x93\xdc\x17\x7d\x16\xea\x3c\xb9\xd1\x93\x12\x60\x1f\xb7\x7f\x3d\x85\x38\xb3\xa8\x12\xaf\x8e\x04\x0e\xd6\x50\xf3\x08\x00\x00\xff\xff\x0d\x14\x6e\x01\x12\x01\x00\x00")

func samplesQuery_execYmlBytes() ([]byte, error) {
	return bindataRead(
		_samplesQuery_execYml,
		"samples/query_exec.yml",
	)
}

func samplesQuery_execYml() (*asset, error) {
	bytes, err := samplesQuery_execYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "samples/query_exec.yml", size: 274, mode: os.FileMode(436), modTime: time.Unix(1462707753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _samplesQuery_param_validationsYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x94\xc1\x8e\xd3\x30\x10\x86\xef\x7d\x8a\xd1\x72\xd8\x0b\xad\xda\x15\xe2\x60\x84\x10\xd0\x4a\x54\x42\x2b\xd8\x76\x85\xc4\xcd\x24\x93\x76\x58\xdb\x71\xed\xf1\x42\x10\x0f\x8f\xe3\x24\x6e\x82\x56\xe5\x4e\x4f\x9e\xef\xb7\x67\x3c\xbf\x27\x2d\xd1\x17\x8e\x2c\x53\x6d\x04\x58\x57\x3f\x52\x24\xe0\xa5\xb6\x0a\xe1\x14\xd0\x35\x8b\x99\x67\x17\x0a\xf6\x62\x06\xb0\x4b\xc2\x2e\x81\x36\x06\x98\x24\x20\x0f\x72\x38\xdc\x9d\x5a\xa4\x4d\x15\xa1\x2a\x7d\x77\x60\x0e\x46\x6a\x14\xb0\x5d\xa7\x10\x80\x1b\x1b\xc3\xb8\x9d\xcc\x61\x40\xf2\x20\xe0\xfa\xbb\x8f\x39\xaf\xa8\xbc\xba\xee\xf1\xa3\x54\x54\xca\xb6\x54\x9f\xab\xfd\x39\x3c\x05\x72\x58\x0a\x88\x05\x31\x63\x13\x94\xda\x56\xef\x94\x34\x0f\x9d\x02\xcf\x80\x2a\x40\x6d\xb9\xe9\x8b\x41\xed\x40\x2a\x05\x3f\x8e\xc4\xe8\xad\x2c\x70\x10\xf8\x88\x06\x0c\x45\x89\xa2\xfe\x0d\x21\x78\x2c\x81\x8c\x67\x94\x65\x2e\xa1\xe5\xcf\x8f\x68\x0e\x7c\x14\x70\xb3\x3c\x53\x32\x99\x66\x58\x04\xcf\xb5\x16\xf1\x0e\xdd\x6a\xd4\x0a\x54\xc1\x14\xa9\xa7\xbc\x7b\x0e\xf6\xe1\xb0\xd0\xcd\x79\x53\x96\xd0\x04\x3d\x6a\x7e\x1e\x2f\xa1\x70\x14\x56\x98\xc1\x60\xf4\xe7\x20\x0d\x13\x37\x53\xbb\x4f\x6a\x71\xdb\x5a\x64\xf8\xe5\x8b\x27\x5c\x3f\x71\x73\xd9\xf6\xd8\xbc\x80\xd5\x72\x39\x69\x5c\xc0\x7c\x35\x22\xdd\x1b\x7c\x45\x57\x8f\x9f\xe0\x57\x8c\xff\xe1\xf0\xac\x9d\x3c\xc2\x54\xee\xde\xc6\xda\xb8\x7a\x62\xda\x42\x52\x86\x69\xed\x26\xcd\x73\x44\x1a\x0d\x0b\xf8\xdd\xdf\xe3\xfe\xd3\xfa\xed\x7e\xd3\x8f\x6e\xcf\x76\x9b\x7d\xbe\xe5\x76\x0d\xaf\xe1\x0d\x95\xcf\x33\xd9\x13\xc7\x01\x8e\x90\xdb\xc5\x99\xbf\xaf\x0d\xc7\xd4\xad\x52\x74\xcb\x5e\xfa\xf2\x61\x73\xb7\xc9\x89\x5e\x25\x6a\x1d\x5a\x99\xe6\xb2\x92\xca\x77\x85\x23\x90\x7a\xfc\xf5\xfc\xf5\x31\x38\xf4\x41\xb1\x98\xbc\xd4\x6d\x6d\x70\x96\x7d\xb8\xf9\xdf\x7c\xb8\xc3\x4a\x4c\xfe\x56\x2e\x1b\xf1\x27\x00\x00\xff\xff\x8b\x21\xda\x76\xb0\x04\x00\x00")

func samplesQuery_param_validationsYmlBytes() ([]byte, error) {
	return bindataRead(
		_samplesQuery_param_validationsYml,
		"samples/query_param_validations.yml",
	)
}

func samplesQuery_param_validationsYml() (*asset, error) {
	bytes, err := samplesQuery_param_validationsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "samples/query_param_validations.yml", size: 1200, mode: os.FileMode(436), modTime: time.Unix(1462716360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _samplesQuery_rowsYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x52\x51\x4b\x33\x31\x10\x7c\xbf\x5f\x31\xf4\xa5\xf0\xf1\xd9\x1f\x10\x11\xb1\xed\x89\x05\x45\x68\x0b\x3e\xa7\xcd\x7a\x44\x72\x49\x4c\x72\xca\xfd\x7b\x73\xc9\xdd\x61\x31\xf8\xec\x53\xd8\xdd\xd9\xc9\xcc\xb0\x82\xfc\xd9\x49\x1b\xa4\xd1\x0c\xd6\x99\x0f\x19\x3b\xf0\xbc\xb5\x8a\xd0\x1a\x41\x6a\x55\xf9\xe0\xba\x73\xf0\xac\x02\xd6\xca\x34\xc3\x0b\x5c\x2c\x3a\xb2\x8e\x3c\xe9\xe0\xc1\x71\x8a\x98\x55\xc2\xbc\x4a\x52\xc2\x67\xfc\x15\x34\x6f\x89\x61\xb7\x4d\x25\x10\x7a\x1b\xcb\xc8\x2d\x75\x33\xb5\x78\xc3\xb0\x7c\xf3\x91\x72\x21\xc5\xff\x3c\x5b\x2c\x2f\xf6\x8f\x32\x28\x2a\x51\x54\xef\x1d\x39\x49\xe9\xbb\x03\x29\x3a\x87\x82\x50\x9f\x06\x38\xf5\x51\x07\xb8\x16\x99\x2e\xab\xf5\x81\x07\x6a\xa3\x09\x86\x43\xfd\x58\x6f\x8e\xf8\x87\xfb\xfd\xf3\x13\x0e\x39\x8d\x97\x87\x7a\x5f\x0f\x7b\x37\xb8\x95\xe2\x3a\xed\x44\xdb\x96\x3b\x12\x0c\x31\xa3\x2c\x2b\x06\xd1\xa9\xf1\xef\x49\xe2\xde\x7c\x8e\x75\xce\x72\x9a\x62\x34\x35\xc4\x3a\xb7\xbe\xa7\x96\x9d\xcf\x99\x0d\x45\x0e\x60\x36\xb9\xee\x77\xdb\x3b\x2d\x52\xf7\x4f\x19\xf6\x55\xc9\xce\x8f\x33\x28\x1e\xc2\xef\xa7\x50\x3e\x86\x22\xd1\x04\xdc\x18\x1d\xa2\xd1\x32\xf4\x2b\x00\x00\xff\xff\x7e\x7d\xee\x50\x04\x03\x00\x00")

func samplesQuery_rowsYmlBytes() ([]byte, error) {
	return bindataRead(
		_samplesQuery_rowsYml,
		"samples/query_rows.yml",
	)
}

func samplesQuery_rowsYml() (*asset, error) {
	bytes, err := samplesQuery_rowsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "samples/query_rows.yml", size: 772, mode: os.FileMode(436), modTime: time.Unix(1462707753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _samplesQuery_scalarYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8e\x3f\xab\xc2\x30\x14\xc5\xf7\x7e\x8a\x33\xbe\xf7\x86\x4e\x0f\x87\x88\x38\xd4\x88\x83\x5a\x68\x2b\xce\x69\x7b\x87\x40\xff\xc4\xe4\x46\xe8\xb7\xb7\x0d\xad\xe0\x24\x3a\xe5\x70\x72\x7e\xdc\x5f\x4d\xae\xb2\xda\xb0\xee\x3b\x01\x63\xfb\xbb\x1e\x1b\x38\xd5\x9a\x86\x70\xf3\x64\x87\x38\x9a\x1e\x4d\x4e\x44\x40\xd2\xfb\x8e\xa7\x00\xbc\x90\xd5\xd4\x2f\x5c\x1c\xfe\x1d\x2b\xa6\x96\xc6\x39\x72\x79\x94\x49\x81\x24\xbd\x9c\x8b\x9f\xbf\x5f\xec\xb3\xf4\x84\x3c\x6c\xd7\x61\x6b\x2c\x19\x65\xa9\x16\x60\xeb\x29\x54\x96\x9c\x6f\xe6\x53\x00\x0f\x86\x04\x74\xc7\xab\xff\xc5\x62\xa7\x9d\x2a\x9b\x91\x79\x63\x83\x72\x40\x3d\x6f\x3f\x31\xc3\xf5\x20\x33\xf9\x44\xb1\xc1\x76\xc9\x5f\x48\x3f\x02\x00\x00\xff\xff\x38\x89\x10\xaa\x68\x01\x00\x00")

func samplesQuery_scalarYmlBytes() ([]byte, error) {
	return bindataRead(
		_samplesQuery_scalarYml,
		"samples/query_scalar.yml",
	)
}

func samplesQuery_scalarYml() (*asset, error) {
	bytes, err := samplesQuery_scalarYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "samples/query_scalar.yml", size: 360, mode: os.FileMode(436), modTime: time.Unix(1462707753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _samplesSample1Yml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x52\x51\x4b\x33\x31\x10\x7c\xef\xaf\x18\xfa\x52\xf8\xf8\xec\x0f\x88\x88\xd8\xf6\xc4\x82\x22\xb4\x05\x9f\xd3\x66\x3d\x22\xb9\x24\x26\x39\xe5\xfe\xbd\xb9\xe4\xee\xf0\x30\xf8\xec\x53\xd8\xdd\xd9\xc9\xcc\xb0\x82\xfc\xc5\x49\x1b\xa4\xd1\x0c\xd6\x99\x0f\x19\x3b\xf0\xbc\xb1\x8a\xd0\x18\x41\x6a\xbd\xf0\xc1\xb5\x97\xe0\xd9\x02\xd8\x28\x53\xf7\x2f\x30\x5b\x74\x64\x1d\x79\xd2\xc1\x83\xe3\x1c\x31\xeb\x84\x79\x95\xa4\x84\xcf\xf8\x2b\x68\xde\x10\xc3\x7e\x97\x4a\x20\x74\x36\x96\x91\x5b\xea\x7a\x6c\xf1\x9a\x61\xf5\xe6\x23\xe5\x52\x8a\xff\x79\xb6\x5c\xcd\xf6\x4f\x32\x28\x2a\x51\x2c\xde\x5b\x72\x92\xd2\x77\x47\x52\x74\x09\x05\xa1\x3e\x0d\x70\xee\xa2\x0e\x70\x2d\x32\x5d\x56\xeb\x03\x0f\xd4\x44\x13\x0c\xc7\xea\xb1\xda\x9e\xf0\x0f\xf7\x87\xe7\x27\x1c\x73\x1a\x2f\x0f\xd5\xa1\xea\xf7\x6e\x70\x2b\xc5\x75\xda\x89\xb6\x2d\x77\x24\x18\x62\x46\x59\x56\x0c\xa2\x55\xc3\xdf\xa3\xc4\x83\xf9\x1c\xea\x9c\xe5\x38\xc5\x60\xaa\x8f\x75\x6a\x7d\x4f\x2d\x3b\x9f\x32\xeb\x8b\x1c\xc0\x64\x72\xd3\xed\x77\x77\x5a\xa4\xee\x5f\x34\x3c\x77\xf3\xe3\x0a\x8a\x77\xf0\xfb\x25\x94\x6f\xa1\x48\x34\x02\xb7\x46\x87\xe8\xb3\x0c\xfd\x0a\x00\x00\xff\xff\x6d\xd6\xb3\x58\x03\x03\x00\x00")

func samplesSample1YmlBytes() ([]byte, error) {
	return bindataRead(
		_samplesSample1Yml,
		"samples/sample1.yml",
	)
}

func samplesSample1Yml() (*asset, error) {
	bytes, err := samplesSample1YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "samples/sample1.yml", size: 771, mode: os.FileMode(436), modTime: time.Unix(1462707753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _samplesStruct_as_query_paramsYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x93\x4d\x4b\xc4\x30\x10\x86\xef\xfd\x15\xc3\x5e\xf6\xa2\x0b\x8a\x78\x88\x88\x08\xad\xb8\x17\xd1\xfd\xd0\x73\xd8\x4e\x97\x91\x36\x4d\x93\xc9\x42\xc1\x1f\x6f\x9a\xb4\xc5\x4a\x3d\x08\x5e\xec\x6d\x9e\xf9\x78\x67\xde\x92\x1c\xed\xc1\x90\x66\xaa\x95\x00\x6d\xea\x13\x79\x02\x56\x56\xba\x44\x68\x1c\x9a\x76\x95\x58\x36\xee\xc0\x56\x24\x00\xdb\x90\xd8\x06\xd0\xc5\x00\x93\x01\x64\x41\x0e\xcd\xb1\x6b\x15\x8a\x0a\xc2\x32\xb7\xb1\xe1\x1c\x94\xac\x50\xc0\x3a\x0d\x21\x00\xb7\xda\x87\xbe\x9c\xd4\x71\x40\xf2\x28\x60\xf9\x6e\xfd\xcc\x05\xe5\x8b\x65\x8f\x4f\xb2\xa4\x5c\x76\x52\xfd\xac\xee\x33\xd8\x38\x32\x98\x0b\xf0\x82\x38\x91\x78\x71\x52\x31\x71\x3b\x11\x22\xc5\xd7\x57\x33\x3a\x0d\xb7\x5e\x28\xe9\x6e\x26\x0c\xf3\xf7\xda\x8b\xe1\xc5\xcc\x9d\x2e\x64\x06\x9f\xe2\x8d\x96\x3d\xaa\x50\xb1\x80\x8f\x7e\xfc\xfe\x39\xbd\xdf\x65\xbd\x69\x3d\xdb\x66\xbb\x71\xf5\x75\x0a\xb7\x70\xb7\x4e\xcf\x46\x32\x6c\xdc\xf1\x6f\xdb\xbf\x3d\x66\x9b\x6c\x6c\xb9\x09\x54\x1b\xd4\x32\xdc\x5e\xc8\xd2\x46\x09\x0f\x64\x65\xe3\x2f\x7a\xf8\xa5\xef\x7f\x6c\xb0\x41\xeb\x4a\x16\x93\xec\x53\xad\x30\x19\xcd\xbd\xfc\xc7\xe6\x6e\xb0\x10\x93\x07\x31\x57\xf1\x1a\x1d\xc5\x2f\xe6\xfd\xe8\xca\x67\x00\x00\x00\xff\xff\xce\x85\x04\x2b\x8c\x03\x00\x00")

func samplesStruct_as_query_paramsYmlBytes() ([]byte, error) {
	return bindataRead(
		_samplesStruct_as_query_paramsYml,
		"samples/struct_as_query_params.yml",
	)
}

func samplesStruct_as_query_paramsYml() (*asset, error) {
	bytes, err := samplesStruct_as_query_paramsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "samples/struct_as_query_params.yml", size: 908, mode: os.FileMode(436), modTime: time.Unix(1462723629, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x51\xcb\x6e\xdb\x30\x10\x3c\x8b\x5f\xb1\xe0\xc9\x2e\x10\xf9\x5e\xc0\x17\x5b\x2e\x10\xa0\x8d\x9b\xc8\x39\xf4\xd4\xd0\xd2\x3a\x25\x4a\x51\x32\xb9\x6a\x51\x10\xfa\xf7\x8e\xe2\x47\xdc\xb8\xed\x49\xfb\x98\x9d\xd1\x0c\x53\xaa\x79\x67\x3d\x93\xfe\xb4\x2e\x56\x1f\xf5\x30\xa8\xd9\x8c\x3e\x9b\xea\xbb\x79\x66\x4a\x29\x3f\x96\xc3\x30\x36\x05\xc7\x2a\xd8\x4e\x6c\xeb\x01\xec\xfe\x82\x52\xe3\x79\xb1\xa6\xbb\xf5\x86\x56\xc5\xed\xe6\x3d\x2d\xdb\x9a\xe9\x99\x3d\x07\x23\x5c\xd3\xf6\x17\xe9\x7d\xec\xb8\x1a\xcf\x4a\x7c\x3f\x58\x87\x3b\xad\x54\x4a\x76\x47\xf9\x6d\xd3\xb5\x41\x22\x98\xec\x4b\x45\x13\x95\xe9\xda\x88\xd9\x9a\xc8\xb3\xb8\x77\x5a\x65\x29\x05\xe3\x21\xfc\x0a\xd6\x20\x1b\x49\xb0\x62\x5f\xe3\x78\x0a\x3a\x76\x91\x5f\x79\xde\x90\x9c\x80\x47\xd9\xfb\x9e\x83\xe5\x58\xf2\xbe\x67\x5f\x31\xdd\x60\x55\xb5\x3e\x42\xff\xac\xf6\x06\x03\x44\xf6\x15\xba\x77\xa6\x41\x5d\x4a\x23\x34\xa7\x27\x0c\x96\x8e\x8d\xe7\xba\x14\x18\x6e\xd8\xcb\x30\x3c\x5d\xfe\xd6\x0d\x1d\x95\x7f\x98\x30\xba\x1b\x03\x5b\xd0\xe1\x19\x22\xc9\x37\xa6\xd3\x9f\xa2\x31\x42\x3f\xad\x73\xb4\x65\xea\x23\xe2\xdb\xb5\x01\x53\x1b\xa9\x41\xac\x2e\x57\x19\x4e\xdf\xc1\x50\x5e\x2c\x40\xae\x76\xbd\xaf\x10\xb6\x14\x8b\xc9\xf4\x34\xa7\xa4\x32\x58\x44\x31\x9f\x93\xb7\x6e\xec\xb3\xce\x78\x5b\x4d\x34\x86\xbe\x15\x8a\x2c\x7a\xaa\x32\x18\x0a\x2c\x7d\xf0\x00\xab\x73\x34\xa5\x84\xbe\x92\x4b\xdb\xe7\x44\xae\x56\x78\x54\x78\xee\x1c\x9c\x93\x2e\x37\x0f\x8f\xcb\x8d\xa6\xfc\x65\x7e\x30\xfd\xff\xd8\x2f\xb9\xaf\x56\x7f\x70\xdf\x3f\xae\x1e\xbe\xfc\x93\xfa\x50\xfc\x0e\x00\x00\xff\xff\xa2\xb1\xc6\x5b\xdc\x02\x00\x00")

func templatesModelTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelTmpl,
		"templates/model.tmpl",
	)
}

func templatesModelTmpl() (*asset, error) {
	bytes, err := templatesModelTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.tmpl", size: 732, mode: os.FileMode(436), modTime: time.Unix(1462707753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPrepared_query_commonsGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x91\x31\x6f\x83\x30\x10\x85\x67\xfc\x2b\xae\x19\x2a\x1c\x55\xce\x5e\x29\x43\x9b\x30\x26\xa1\x44\x1d\x3a\x21\x04\x47\x8b\x04\x8e\x6b\x1f\x43\x65\xf9\xbf\xd7\x26\x4e\x1b\x89\x0c\x59\x10\x77\xbc\x77\xdf\x7b\xc2\xda\x06\xdb\x4e\x22\x2c\xf2\x22\xcb\x5f\x8a\x6c\x5b\xbe\xbd\x67\xc5\x47\xb9\x39\xec\x76\x87\xfd\x71\xe1\x1c\x5b\xad\x20\xd7\xa8\x2a\x8d\x8d\xb5\x62\x5f\x0d\xe8\x1c\xf8\x85\x46\x83\x92\x0c\xd0\x17\x82\x8a\x02\xf8\x57\x18\xaa\x08\x07\xaf\x10\x8c\x7e\x14\xde\xb8\x61\x48\x8f\x35\x81\x65\x89\xa1\x81\x60\x69\xbe\x7b\x71\xf4\x6f\xcc\xb1\x2b\xe8\x35\x93\x46\x2d\xef\x01\xb6\xa3\xac\x67\xfe\x94\x43\xba\x9c\xa5\x78\x02\xd4\xfa\xa4\xf9\x25\xc6\x34\xc3\xf3\x1a\x3e\x91\xb6\xaf\x29\x17\xd1\x91\x96\x7f\x96\x90\x91\xb3\xa4\x6b\x27\xe9\xc3\x1a\x64\xd7\x07\x7b\x72\x0e\x18\xc6\xe9\x0a\x4b\x7c\x91\xcb\xf2\x71\x46\xb6\x01\xe7\xf9\x5e\x1e\x1b\x6f\xfa\x93\x41\xa8\xc3\xf3\xee\x96\xa9\x82\x79\x29\x7e\x3e\xe5\x1b\x4f\xe5\x42\xb8\x18\x43\x89\x40\x15\xf1\xb3\xe7\x5a\x8b\xb2\xf1\x7f\xf9\x37\x00\x00\xff\xff\x5c\x41\x18\x3b\x0a\x02\x00\x00")

func templatesPrepared_query_commonsGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPrepared_query_commonsGoTmpl,
		"templates/prepared_query_commons.go.tmpl",
	)
}

func templatesPrepared_query_commonsGoTmpl() (*asset, error) {
	bytes, err := templatesPrepared_query_commonsGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/prepared_query_commons.go.tmpl", size: 522, mode: os.FileMode(436), modTime: time.Unix(1462707753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPrepared_query_execGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\x41\x4b\x03\x31\x10\x85\xcf\xe6\x57\x0c\x7b\xda\x8a\xa4\x77\xc1\x83\xb4\x39\xb6\x5d\x57\x0a\x7a\x2a\x61\xf7\x55\x0b\x9b\x34\x4e\x26\x20\x84\xfc\x77\xb3\xab\x08\xe2\x65\x98\xc7\xfb\xf8\xe0\xe5\x3c\xe2\x7c\xf1\xa0\xa6\xeb\x4d\xf7\xd8\x9b\xed\xe9\xe9\x68\xfa\xd7\x93\x79\x31\x9b\xa6\x14\x95\xb3\xc0\x85\xc9\xca\x7f\x64\x73\xd8\xed\x0e\xfb\xe7\x86\x74\xe5\xd4\x7a\x4d\xe6\x13\x03\xa1\x9e\x24\x88\x24\xef\xa0\xc0\x08\x96\x31\x52\xce\x7a\x6f\x1d\x4a\xa1\x28\xd5\xe5\xe0\x45\xab\x73\xf2\x03\xb5\x81\x6e\xbb\x1f\xec\x97\x5a\x2d\xae\xb6\xe6\xce\xb2\x75\x71\x8b\x61\xaa\x8f\x5c\xae\x7e\x2e\xdb\xf8\x31\xe9\x1e\x31\x4d\x72\x47\x60\xbe\xf2\x8a\xb2\xba\xe1\x25\xd0\xfd\x03\x05\x1d\xc5\x89\xfe\x2b\x39\x46\xfb\x36\xbb\x2b\x08\x49\xec\xe9\x9b\x57\xf3\x48\xf8\xb1\x8e\xf8\x0a\x00\x00\xff\xff\xab\x40\xaa\xe4\x0e\x01\x00\x00")

func templatesPrepared_query_execGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPrepared_query_execGoTmpl,
		"templates/prepared_query_exec.go.tmpl",
	)
}

func templatesPrepared_query_execGoTmpl() (*asset, error) {
	bytes, err := templatesPrepared_query_execGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/prepared_query_exec.go.tmpl", size: 270, mode: os.FileMode(436), modTime: time.Unix(1462718850, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPrepared_query_rowGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x90\x4f\x6b\xf3\x30\x0c\x87\xcf\xf1\xa7\xd0\x9b\x53\xfb\x52\xdc\xfb\xa0\x87\xb1\xe6\xd8\x26\x75\x57\xc6\x4e\xc5\x24\xca\x16\x48\x1c\x23\x2b\xe9\x8a\xc9\x77\x9f\x9d\xee\x0f\x74\x37\x21\x3d\xfa\x3d\x42\xde\x57\x58\x37\x06\x21\x2d\x54\x56\x3c\xaa\x6c\x7b\x3e\x9c\x32\xf5\x7a\x56\xf9\x4b\x3a\x4d\xc2\x7b\xc6\xce\xb6\x9a\xff\x12\x4f\xf9\x6e\x97\xef\x8f\x29\xc8\xc0\x89\xf5\x1a\x0e\x03\xd2\x15\xf0\x03\xcb\x81\xd1\x01\xbf\x23\x58\x42\xab\x09\x2b\xf0\x5e\xee\x75\x87\xd3\x04\x8e\x43\x58\x87\x86\xa5\xa8\x07\x53\xc2\xc2\xc2\xff\xe2\x0b\xfb\xa1\x96\xb7\xb0\x45\x68\x14\x9a\x74\xe7\xb6\x58\xb6\xa1\xe0\xa6\x37\x71\x1a\x07\x0a\x79\x20\xf3\x7c\xb5\x81\x5f\x01\x12\xf5\xb4\x04\x2f\x92\x51\x13\x8c\x70\x07\x88\x24\x00\xf0\xb0\x01\x2b\x1d\x77\x2c\xe7\x78\xd5\x5f\x7e\x0d\x27\xa7\xdf\xa2\x59\x1e\x4b\x6d\xe6\xfc\xfe\x12\xcb\xd0\x12\x49\x53\x47\x01\xfc\xdb\x80\x69\xda\x28\x49\x68\x0e\xbf\xd7\xf8\xdb\x25\x22\x09\x1f\xf9\x46\xc6\x55\x5c\x12\xf1\x97\x68\xaa\x70\xca\x67\x00\x00\x00\xff\xff\x7a\xfe\xd6\x71\x74\x01\x00\x00")

func templatesPrepared_query_rowGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPrepared_query_rowGoTmpl,
		"templates/prepared_query_row.go.tmpl",
	)
}

func templatesPrepared_query_rowGoTmpl() (*asset, error) {
	bytes, err := templatesPrepared_query_rowGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/prepared_query_row.go.tmpl", size: 372, mode: os.FileMode(436), modTime: time.Unix(1462718850, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPrepared_query_rowsGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x92\x4d\x6f\xa3\x30\x10\x86\xcf\xf8\x57\xcc\xe6\x04\xab\x88\xdc\x77\x95\x43\x95\x70\x4c\x42\x48\xa3\xaa\xaa\xaa\xc8\x22\x43\x8b\x04\xc6\x1a\x9b\x7c\xc8\xe2\xbf\x77\xec\x26\x3d\x84\xde\xcc\xeb\x77\x9e\x79\x40\x38\x77\xc4\xaa\x56\x08\x93\xbc\xc8\xf2\xa7\x22\x5b\x1e\xb6\xfb\xac\x78\x3d\x14\x9b\x97\xdd\x64\x18\x84\x73\x16\x5b\xdd\x48\x3b\xae\x2c\x36\xab\xd5\x66\xbd\x9b\x40\xca\x3d\x31\x9b\xc1\xb6\x47\xba\x02\x5e\xb0\xec\x2d\x1a\xb0\x9f\x08\x9a\x50\x4b\xc2\x23\x38\x97\xae\x65\x8b\xc3\x00\xc6\x32\xac\x45\x65\x53\x51\xf5\xaa\x84\x58\xc3\xdf\xfc\x56\xfb\x69\x25\xdf\xb0\x98\x83\x5c\x92\x6c\xcd\x12\xcb\x86\x0f\xb6\xee\x94\xbf\x8d\xdf\xde\xf9\xaa\x40\xdb\x93\x7a\xbe\x6a\x9e\x98\x02\x12\x75\x94\x80\x13\xd1\x49\x12\x48\x18\x55\x44\x44\xdd\xd9\x84\x22\xfc\x9b\x83\x4e\x8d\x6d\x6d\xfa\xb0\x68\x6f\xe4\x87\x17\x10\x51\x5d\x85\xe6\x9f\x39\xa8\xba\xf1\xd8\x88\x02\xcc\x3f\x06\x88\x88\x18\xc9\xdf\x0f\x09\x3c\x38\x5d\x34\x9d\xc1\x38\x11\x22\xaa\xba\x5b\xb4\xc6\x8b\x8d\x83\x53\x90\x3a\xc1\x48\xe9\xbe\x86\x85\xc2\xc4\xae\x94\xca\xdb\x14\xdd\xd9\x1f\xd9\xe4\xff\xa3\xc6\xd8\xc3\x8b\x44\x12\xe6\x20\xb5\x46\x75\x8c\xe5\x14\x4e\x49\xd0\x7b\xa0\x67\x44\xf1\x18\xf8\xcb\x7b\x89\x7b\xc8\x28\xce\x85\xff\x13\x98\xcc\xc6\x5f\x01\x00\x00\xff\xff\xae\x2e\x57\xc6\x33\x02\x00\x00")

func templatesPrepared_query_rowsGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPrepared_query_rowsGoTmpl,
		"templates/prepared_query_rows.go.tmpl",
	)
}

func templatesPrepared_query_rowsGoTmpl() (*asset, error) {
	bytes, err := templatesPrepared_query_rowsGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/prepared_query_rows.go.tmpl", size: 563, mode: os.FileMode(436), modTime: time.Unix(1462718850, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPrepared_query_scalarGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x90\xc1\x4e\x83\x40\x10\x40\xcf\xec\x57\x8c\x3d\x18\x30\x66\x7b\x37\xe9\x81\xb4\xdc\x6c\x4b\x17\x7b\xf0\xd4\x6c\x60\x50\x12\x58\x36\xc3\x80\x36\x1b\xfe\xdd\x5d\x34\x6a\xf4\xb6\x99\x79\x79\x2f\x3b\xce\x55\x58\x37\x06\x61\x95\xab\x2c\x4f\x55\xb6\xbb\x9c\xce\x99\x7a\xbe\x14\xdb\xf4\x31\x55\xab\x79\x16\xce\x31\x76\xb6\xd5\xfc\x1f\xda\x1e\xf7\xfb\xe3\xa1\x58\x81\xf4\x9c\x58\xaf\xe1\x34\x22\x5d\x01\xdf\xb1\x1c\x19\x07\xe0\x57\x04\x4b\x68\x35\x61\x05\xce\xc9\x83\xee\x70\x9e\x61\x60\x2f\xeb\xd0\xb0\x14\xf5\x68\x4a\x88\x2d\xdc\xe5\x5f\xd8\x37\x95\x7c\xca\x62\x3f\xc8\x35\xe9\x6e\xd8\x61\xd9\xfa\x07\x37\xbd\x09\xdb\xb0\x50\xc8\x23\x99\xa7\xab\xf5\xfc\x3d\x20\x51\x4f\x09\x38\x11\x4d\x9a\x60\x82\x3f\x80\x88\x3c\x00\x0f\x1b\xb0\x72\xe0\x8e\xe5\xa2\x57\xfd\xdb\x4f\xe1\x3c\xe8\x97\x50\x96\x45\xa9\x4d\x7c\x3b\x25\x22\x6a\xea\xa0\x85\x9b\x0d\x98\xa6\x0d\xea\x88\x16\x25\x4c\x4b\x4f\x44\xfe\xdf\xbf\x46\x1e\x12\xe1\x62\x68\x2a\x1f\xfc\x08\x00\x00\xff\xff\x4c\xda\xff\xbd\x5d\x01\x00\x00")

func templatesPrepared_query_scalarGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPrepared_query_scalarGoTmpl,
		"templates/prepared_query_scalar.go.tmpl",
	)
}

func templatesPrepared_query_scalarGoTmpl() (*asset, error) {
	bytes, err := templatesPrepared_query_scalarGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/prepared_query_scalar.go.tmpl", size: 349, mode: os.FileMode(436), modTime: time.Unix(1462718850, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesQueryTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\xcf\xdf\xea\x82\x30\x14\xc0\xf1\xeb\xdf\xef\x29\xc6\xee\xdd\x3b\x88\x79\x17\x56\x9b\x52\x5d\xc5\xd0\x23\x08\xf3\x4f\x6e\x12\x31\x7c\xf7\x4e\xa6\xac\x84\xd5\x95\xc2\xf9\x9e\xcf\x38\xd6\x16\x50\x56\x0d\x10\x7a\xc8\x62\x7e\xa6\xe3\xf8\xff\x67\x6d\x40\xaa\x92\xb0\x0d\xe4\x4a\xf6\xc0\x41\x0f\xca\x08\xd3\x0f\xb9\x79\x8e\x71\x6e\xa0\xee\x94\x34\xb8\x25\x52\x9e\x45\x29\x25\x6c\x5d\x59\x0b\x4d\x81\x3f\x8e\xdb\xcb\x5e\xd6\xfa\x55\xb0\x44\xd6\xe0\xc7\xde\xd3\x35\x86\x14\x5c\x97\xf7\x58\x7a\xef\x70\x91\xb7\x37\x3a\x6b\x01\x71\xde\x74\xd2\x85\xef\x8e\x48\xce\x8c\xd2\x40\x3c\x82\xfe\x4a\x88\xdf\x46\xd2\x36\xe0\x37\xe2\x53\x1c\x7d\x18\xde\x52\x44\xe1\x36\xe4\xae\x9d\x4e\x5f\xbe\x8f\x00\x00\x00\xff\xff\x19\x9a\x99\xf6\xb1\x01\x00\x00")

func templatesQueryTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesQueryTmpl,
		"templates/query.tmpl",
	)
}

func templatesQueryTmpl() (*asset, error) {
	bytes, err := templatesQueryTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/query.tmpl", size: 433, mode: os.FileMode(436), modTime: time.Unix(1462722635, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesQuery_execGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x91\x31\x4f\xc3\x30\x10\x85\xe7\xf8\x57\x1c\x9d\x12\xa9\x75\x77\xa4\x0e\x40\x3c\xb0\xa0\x92\xaa\x08\xa6\xca\x4a\x2e\x91\x25\xc7\x0d\xb6\x23\x21\x59\xfe\xef\x9c\x13\x53\x18\x98\x72\xb9\xf7\xf2\xdd\x7b\x4a\x08\x1d\xf6\xca\x20\x6c\x5e\xcf\xa2\xf9\xb8\x88\x77\xf1\xb4\x89\x91\xed\xf7\x10\x02\x7f\x91\x23\xc6\x98\xa6\x1a\x5d\x6b\xd5\xe4\xd5\xd5\x90\xda\xcf\xa6\xfd\xd5\x4b\x9a\x8e\xd2\xca\xd1\xd5\xd8\x6a\x1a\x56\x57\x05\xa5\xfb\xd4\xbc\x41\x37\x6b\xbf\x05\xb4\xf6\x6a\x2b\x08\xac\x08\x61\x07\xaa\x07\x69\x3a\xe0\xcf\xee\xec\x94\x19\xd6\xcf\x4f\xde\xce\xad\xff\x77\xf9\x26\xb5\xea\x16\xb0\x83\x1d\x25\x28\x08\x07\xf7\x07\x98\x16\x0f\xcf\x32\x96\x15\x2b\x08\x9d\xc4\xbb\x03\x18\xa5\xd3\xbd\xc2\xa2\x9f\xad\x49\xaf\x4b\x0c\x56\xc4\x14\x02\x4d\x97\x40\x76\xd9\x25\xd6\x80\xbe\x7e\x2c\x2b\x2e\xbe\xb0\x2d\x2f\xb7\x7a\x27\x3f\x7a\x2a\x4b\xd8\xdc\xf2\xec\xe4\x40\xfb\x2d\xdc\x7a\xe7\x0d\x64\x28\x85\xc8\x27\x57\x38\x8b\x8c\x65\x80\x45\x4a\x8c\xe4\x09\xc1\xe3\x38\x69\xca\x0c\x9b\x63\x23\x8e\x0f\x8d\xa8\x2f\x7f\xfe\x01\xf0\xe4\x59\x33\xfe\x3c\xbf\x03\x00\x00\xff\xff\x74\x84\xc7\x8f\xad\x01\x00\x00")

func templatesQuery_execGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesQuery_execGoTmpl,
		"templates/query_exec.go.tmpl",
	)
}

func templatesQuery_execGoTmpl() (*asset, error) {
	bytes, err := templatesQuery_execGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/query_exec.go.tmpl", size: 429, mode: os.FileMode(436), modTime: time.Unix(1462723573, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesQuery_rowGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x91\x31\x6f\xc2\x30\x10\x85\xe7\xe4\x57\x5c\x99\x12\x09\xcc\x5e\x89\xa1\x55\x18\xba\xb4\x60\x4a\xab\x4e\xc8\x4a\x0e\x64\x29\x71\x22\xdb\x01\x21\xcb\xff\xbd\x67\x27\x04\x09\x55\x9d\x72\xb9\x7b\x7e\xf7\xf9\xd9\xb9\x0a\x8f\x52\x21\xcc\xb6\xfb\x35\xff\x39\xf0\x8f\xef\x99\xf7\xe9\x72\x09\xce\xb1\x77\xd1\xa0\xf7\xa1\x2a\xd0\x94\x5a\x76\x56\xb6\x8a\xa6\xc7\x5e\x95\xf7\x79\x46\xd5\x46\x68\xd1\x98\x02\xcb\x9a\x8a\x41\x95\x43\x18\x70\xb4\xbd\x56\x9f\xd7\x8e\x84\x73\x40\xad\x5b\x9d\x83\x4b\x13\xe7\x16\x20\x8f\x20\x54\x05\xec\xcd\xec\x8d\x54\xa7\xc1\x63\x67\x75\x5f\xda\x3f\x9b\x5f\xa2\x96\x55\x74\x37\xb0\x20\x8c\x84\xec\xe0\x79\x05\x5d\xd4\xb0\x71\x8c\x59\x9e\x26\x64\x1d\x86\x4f\x2b\x50\xb2\x0e\xfb\x12\x1d\x41\xc2\x6f\xc4\x48\x13\x1f\x20\x50\x55\xc1\xe8\x2c\x34\x9c\xe1\x01\x77\xf2\x3f\xa1\x2d\x5e\xb3\x9c\x6d\x7b\xd4\x57\xde\x5e\xb2\xc3\x74\xf7\x9d\x6d\x2c\x9d\xa3\x75\x63\x04\x7b\x23\x4e\xf1\xaa\x53\x28\x63\x07\xc6\x65\x39\xdb\x95\x42\xc5\x68\xda\x4b\x28\xa9\xf5\x0f\xef\x03\x93\xf3\x13\x7d\x7a\x93\x9c\xe7\xe1\x50\x4a\x9d\x11\x44\x23\x25\x82\xb4\xcb\x39\x8b\x4d\x57\x53\x26\x30\xdb\xf0\xf5\xe6\x85\xaf\x8b\xc3\xfd\x9d\x81\x05\xc9\x10\xc1\xed\xfb\x1b\x00\x00\xff\xff\x0a\xa0\x01\x61\x10\x02\x00\x00")

func templatesQuery_rowGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesQuery_rowGoTmpl,
		"templates/query_row.go.tmpl",
	)
}

func templatesQuery_rowGoTmpl() (*asset, error) {
	bytes, err := templatesQuery_rowGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/query_row.go.tmpl", size: 528, mode: os.FileMode(436), modTime: time.Unix(1462723685, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesQuery_rowsGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xc1\xee\x9b\x30\x0c\xc6\xcf\xc9\x53\x78\x3d\x05\xa9\xa5\xf7\x4d\x3d\x6c\x83\xc3\x2e\x5d\x0b\xeb\xa6\x69\x9a\xaa\x08\x4c\x85\x04\x01\x25\xa1\x5d\x15\xf1\xee\x73\x52\xda\x4d\xa5\x87\xff\x09\x63\x9b\xcf\x3f\x7f\xc6\xb9\x12\xab\x5a\x21\x2c\xf6\x87\x34\xfb\x79\xcc\xbe\xfe\xc8\x17\xe3\xc8\xd7\x6b\x70\x2e\xde\xca\x16\xc7\xd1\x47\x09\x9a\x42\xd7\xbd\xad\x3b\x45\xd5\x6a\x50\xc5\xbf\xba\xa0\x68\x27\xb5\x6c\x4d\x82\x45\x43\xc1\xad\x2b\x02\xf1\xeb\x37\x95\x32\xb4\x83\x56\xdf\xae\x3d\xb5\x2e\x01\xb5\xee\x74\x04\x8e\x33\xe7\x56\x50\x57\x20\x55\x09\xf1\x17\x73\x30\xb5\x3a\xdd\x54\x72\xab\x87\xc2\xbe\x4c\x7e\x97\x4d\x5d\x06\x7d\x03\x2b\x02\x61\x24\x07\xef\x37\xd0\x87\x9e\x78\x2a\xa3\x88\x38\x23\x69\x5f\x7c\xb7\x01\x55\x37\x7e\x1e\xd3\x01\xc4\xbf\x06\x0c\xce\x46\x0f\x81\xaa\xf4\x42\x67\xa9\x41\xc2\x0c\x98\x33\xdd\x5d\x4c\xe8\xf7\x73\x4e\x68\x93\x4f\x22\x8a\xf7\x03\xea\xab\x38\x3e\x2c\xc8\x6d\x6b\xc9\x10\x9a\x39\x39\x71\x30\xf2\x14\xf6\x7d\x78\x33\x65\x60\x9a\xf8\x66\x42\xba\x0f\x6a\xf0\x14\xf1\xe7\xa6\x33\x7e\x37\xce\xaa\x6e\x4a\x6d\xf1\x8f\x15\xc1\xce\xb0\xc1\x19\x66\xfc\xf7\x31\x44\x1f\xbe\xc8\x0b\xa9\xfc\xc5\xb2\xee\xe2\x43\x22\xf9\xf0\x8c\x31\xe7\xf0\x20\x4c\xc2\x06\x64\xdf\x13\xbe\x90\x4b\x38\x47\x01\xef\x49\x3d\xd5\x5a\xcc\x05\x5f\xec\xc5\xef\x49\x92\xa2\x3c\xa7\xcc\xe4\x9f\x46\xba\x26\x92\x45\xce\x59\x6c\xfb\x86\xee\x09\x8b\x5d\x96\xee\x3e\x66\x69\x72\xfc\xef\x37\x85\xd8\xf7\xdc\xee\x77\x7f\xfe\x0d\x00\x00\xff\xff\xa5\xb4\x2f\xb6\xd0\x02\x00\x00")

func templatesQuery_rowsGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesQuery_rowsGoTmpl,
		"templates/query_rows.go.tmpl",
	)
}

func templatesQuery_rowsGoTmpl() (*asset, error) {
	bytes, err := templatesQuery_rowsGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/query_rows.go.tmpl", size: 720, mode: os.FileMode(436), modTime: time.Unix(1462723690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesQuery_scalarGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x51\x4d\x6b\xb3\x40\x10\x3e\xbb\xbf\x62\xde\x1c\x5e\x14\x9a\xcd\xbd\x90\x43\x5a\x73\x28\x94\x92\xac\x4d\xa1\xa7\xb0\xe8\x44\x16\x74\x95\xdd\xd5\x12\x16\xff\x7b\x67\xd5\xda\x0f\x4a\x4f\x8e\xf3\x3c\x3e\x1f\xa3\xf7\x05\x5e\x94\x46\x58\x1d\x4f\x7b\xf1\x7a\xce\xee\x77\x8f\x3b\xb1\x1a\x06\xb6\xd9\x80\xf7\xfc\x49\xd6\x38\x0c\x61\x4a\xd1\xe6\x46\xb5\x4e\x35\x9a\xd0\x4b\xa7\xf3\x4f\x3c\xa6\xe9\x20\x8d\xac\x6d\x8a\x79\x45\xc3\xc4\x4a\x20\x00\x02\x5d\x67\xf4\xf3\xb5\x25\xe2\x0d\xa0\x31\x8d\x49\xc0\xb3\xc8\xfb\x35\xa8\x0b\x48\x5d\x00\x7f\xb0\x27\xab\x74\x39\x69\x64\xce\x74\xb9\xfb\x75\xf9\x22\x2b\x55\x8c\xea\x16\xd6\x14\x23\x22\x39\xb8\xdd\x42\x3b\x72\xf8\x0c\x63\x9c\xb0\x88\xa4\x03\xf8\x6f\x0b\x5a\x55\xc1\x2f\x32\x63\x90\xf0\x3a\xc6\x60\xd1\x10\x42\xa0\x2e\x82\x50\x2f\x0d\xf4\xf0\x23\xee\xa2\x5f\xa2\x4b\xef\xe2\x84\x1f\x3b\x34\x57\xd1\xbc\xc5\xe7\xa5\x7b\xe6\x6a\x47\xdf\x91\xdd\x7c\x82\x93\x95\xe5\x58\x75\x39\xca\xbc\x81\xd9\x2c\xe1\x59\x2e\x75\xfc\xbf\xff\x2b\x65\xbf\x64\x64\x5f\x56\x44\x62\xb4\x99\xed\x0c\x52\x6f\x24\x45\xef\x1d\xd6\x6d\x45\xcd\x61\x75\x10\xfb\xc3\x4e\xec\xd3\xf3\xb7\x1f\x0a\x3c\xb0\xa6\xae\x1f\xcf\xf7\x00\x00\x00\xff\xff\xad\xee\x94\x78\xfc\x01\x00\x00")

func templatesQuery_scalarGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesQuery_scalarGoTmpl,
		"templates/query_scalar.go.tmpl",
	)
}

func templatesQuery_scalarGoTmpl() (*asset, error) {
	bytes, err := templatesQuery_scalarGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/query_scalar.go.tmpl", size: 508, mode: os.FileMode(436), modTime: time.Unix(1462723694, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesStructGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\x41\xaa\x83\x30\x10\x86\xd7\xe6\x14\xc1\x03\xc4\x33\xc8\xf3\x15\x84\xd2\x45\x1b\xdd\xb6\xc1\x8c\x32\xa0\xa9\x98\x74\x51\x86\xb9\x7b\x13\xad\xa5\x5d\xcd\xc7\xfc\x33\x1f\x3f\x91\x85\x1e\x1d\xc8\xfc\xa2\xcf\xcd\x9f\xce\x99\x45\x51\x48\x22\x75\x32\x13\x30\x27\xaa\xc0\x77\x0b\xce\x01\xef\x2e\xa6\xe1\x39\xc3\x57\xee\xc3\xf2\xe8\x82\x24\x91\x11\x2d\xc6\x0d\x20\xd5\x01\x61\xb4\x9e\xf9\x47\xa2\xe3\xdb\x4a\xd8\x4b\xa5\xcd\xc0\x7c\x4b\xdb\x37\x80\xb3\x51\x9d\xed\xc0\x42\x6c\x87\xb5\x6f\x3c\xba\xa1\x35\x23\x5a\x93\x0a\xac\xda\x00\xd3\x3c\x9a\xf0\x29\x7d\x6d\xcb\x63\x5d\x95\xfa\x3f\x97\x2a\xe5\x9b\x64\x9f\xaf\x00\x00\x00\xff\xff\x95\x35\x2e\xf1\xe3\x00\x00\x00")

func templatesStructGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesStructGoTmpl,
		"templates/struct.go.tmpl",
	)
}

func templatesStructGoTmpl() (*asset, error) {
	bytes, err := templatesStructGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/struct.go.tmpl", size: 227, mode: os.FileMode(436), modTime: time.Unix(1462721715, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesStruct_validateGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\xcd\xb1\xaa\xc2\x40\x10\x85\xe1\xfa\xee\x53\x1c\x52\x25\x4d\xf2\x0c\xe1\x6a\x21\x88\x85\xae\x69\x65\x71\x67\x71\x21\x4e\x64\xcc\x6a\x31\xcc\xbb\x1b\x51\xec\xff\xf3\x1d\xd5\x48\x29\x33\xa1\x3a\xf8\xfd\xf1\xdf\x9f\x86\x7e\xbb\x59\xf5\x7e\x5d\x99\xb9\xae\xc3\x10\xc6\x1c\xc3\x4c\x10\x9a\x8b\xf0\x1d\x24\x32\x09\x9e\x17\x62\xa4\xa9\x70\x44\xe6\xc7\xbb\xc1\x52\x85\xd6\xa5\xc2\x67\xd4\x37\xa8\xb6\xbb\x70\x25\xb3\xe6\x47\xd4\xcd\x77\xac\xee\xef\xa3\x81\xf3\xe8\xcc\xa9\x12\xc7\xe5\xee\x15\x00\x00\xff\xff\xef\xf9\x75\x69\x8c\x00\x00\x00")

func templatesStruct_validateGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesStruct_validateGoTmpl,
		"templates/struct_validate.go.tmpl",
	)
}

func templatesStruct_validateGoTmpl() (*asset, error) {
	bytes, err := templatesStruct_validateGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/struct_validate.go.tmpl", size: 140, mode: os.FileMode(436), modTime: time.Unix(1462720592, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"samples/_imports.go": samples_importsGo,
	"samples/_no_params.go": samples_no_paramsGo,
	"samples/_no_prepared.go": samples_no_preparedGo,
	"samples/_query_exec.go": samples_query_execGo,
	"samples/_query_rows.go": samples_query_rowsGo,
	"samples/_query_scalar.go": samples_query_scalarGo,
	"samples/_sample1_yml.go": samples_sample1_ymlGo,
	"samples/_struct_as_query_params.go": samples_struct_as_query_paramsGo,
	"samples/imports.yml": samplesImportsYml,
	"samples/no_params.yml": samplesNo_paramsYml,
	"samples/no_prepared.yml": samplesNo_preparedYml,
	"samples/query_exec.yml": samplesQuery_execYml,
	"samples/query_param_validations.yml": samplesQuery_param_validationsYml,
	"samples/query_rows.yml": samplesQuery_rowsYml,
	"samples/query_scalar.yml": samplesQuery_scalarYml,
	"samples/sample1.yml": samplesSample1Yml,
	"samples/struct_as_query_params.yml": samplesStruct_as_query_paramsYml,
	"templates/model.tmpl": templatesModelTmpl,
	"templates/prepared_query_commons.go.tmpl": templatesPrepared_query_commonsGoTmpl,
	"templates/prepared_query_exec.go.tmpl": templatesPrepared_query_execGoTmpl,
	"templates/prepared_query_row.go.tmpl": templatesPrepared_query_rowGoTmpl,
	"templates/prepared_query_rows.go.tmpl": templatesPrepared_query_rowsGoTmpl,
	"templates/prepared_query_scalar.go.tmpl": templatesPrepared_query_scalarGoTmpl,
	"templates/query.tmpl": templatesQueryTmpl,
	"templates/query_exec.go.tmpl": templatesQuery_execGoTmpl,
	"templates/query_row.go.tmpl": templatesQuery_rowGoTmpl,
	"templates/query_rows.go.tmpl": templatesQuery_rowsGoTmpl,
	"templates/query_scalar.go.tmpl": templatesQuery_scalarGoTmpl,
	"templates/struct.go.tmpl": templatesStructGoTmpl,
	"templates/struct_validate.go.tmpl": templatesStruct_validateGoTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"samples": &bintree{nil, map[string]*bintree{
		"_imports.go": &bintree{samples_importsGo, map[string]*bintree{}},
		"_no_params.go": &bintree{samples_no_paramsGo, map[string]*bintree{}},
		"_no_prepared.go": &bintree{samples_no_preparedGo, map[string]*bintree{}},
		"_query_exec.go": &bintree{samples_query_execGo, map[string]*bintree{}},
		"_query_rows.go": &bintree{samples_query_rowsGo, map[string]*bintree{}},
		"_query_scalar.go": &bintree{samples_query_scalarGo, map[string]*bintree{}},
		"_sample1_yml.go": &bintree{samples_sample1_ymlGo, map[string]*bintree{}},
		"_struct_as_query_params.go": &bintree{samples_struct_as_query_paramsGo, map[string]*bintree{}},
		"imports.yml": &bintree{samplesImportsYml, map[string]*bintree{}},
		"no_params.yml": &bintree{samplesNo_paramsYml, map[string]*bintree{}},
		"no_prepared.yml": &bintree{samplesNo_preparedYml, map[string]*bintree{}},
		"query_exec.yml": &bintree{samplesQuery_execYml, map[string]*bintree{}},
		"query_param_validations.yml": &bintree{samplesQuery_param_validationsYml, map[string]*bintree{}},
		"query_rows.yml": &bintree{samplesQuery_rowsYml, map[string]*bintree{}},
		"query_scalar.yml": &bintree{samplesQuery_scalarYml, map[string]*bintree{}},
		"sample1.yml": &bintree{samplesSample1Yml, map[string]*bintree{}},
		"struct_as_query_params.yml": &bintree{samplesStruct_as_query_paramsYml, map[string]*bintree{}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"model.tmpl": &bintree{templatesModelTmpl, map[string]*bintree{}},
		"prepared_query_commons.go.tmpl": &bintree{templatesPrepared_query_commonsGoTmpl, map[string]*bintree{}},
		"prepared_query_exec.go.tmpl": &bintree{templatesPrepared_query_execGoTmpl, map[string]*bintree{}},
		"prepared_query_row.go.tmpl": &bintree{templatesPrepared_query_rowGoTmpl, map[string]*bintree{}},
		"prepared_query_rows.go.tmpl": &bintree{templatesPrepared_query_rowsGoTmpl, map[string]*bintree{}},
		"prepared_query_scalar.go.tmpl": &bintree{templatesPrepared_query_scalarGoTmpl, map[string]*bintree{}},
		"query.tmpl": &bintree{templatesQueryTmpl, map[string]*bintree{}},
		"query_exec.go.tmpl": &bintree{templatesQuery_execGoTmpl, map[string]*bintree{}},
		"query_row.go.tmpl": &bintree{templatesQuery_rowGoTmpl, map[string]*bintree{}},
		"query_rows.go.tmpl": &bintree{templatesQuery_rowsGoTmpl, map[string]*bintree{}},
		"query_scalar.go.tmpl": &bintree{templatesQuery_scalarGoTmpl, map[string]*bintree{}},
		"struct.go.tmpl": &bintree{templatesStructGoTmpl, map[string]*bintree{}},
		"struct_validate.go.tmpl": &bintree{templatesStruct_validateGoTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

