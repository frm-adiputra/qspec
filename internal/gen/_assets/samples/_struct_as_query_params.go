// Package sample provides sample query.
package sample

// DO NOT EDIT: Code generated by "qspec samples/sample.yml"

import "database/sql"

const (
	_Update1Stmt = `UPDATE Sample
SET
  ID = ?,
  Quantity = ?
WHERE ID = ?;
`
	_Update2Stmt = `UPDATE Sample
SET
  ID = ?,
  Quantity = ?
WHERE ID = ?;
`
)

var (
	// DB defines the database that will be used for this model.
	DB *sql.DB
)

func getDB() *sql.DB {
	if DB == nil {
		panic("DB not set")
	}
	return DB
}

// SampleStruct is a sample struct.
type SampleStruct struct {
	ID       string `json:"id"`
	Quantity int64  `json:"qty"`
}

// Validate returns error when found invalid data.
func (p SampleStruct) Validate() error {
	return nil
}

// Update1Params represents query parameters of Update1.
type Update1Params struct {
	ID       string
	Quantity int64
}

// Validate returns error when found invalid data.
func (p Update1Params) Validate() error {
	return nil
}

// Update1 updates sample.
func Update1(params Update1Params) (sql.Result, error) {
	err := params.Validate()
	if err != nil {
		return nil, err
	}

	r, err := getDB().Exec(_Update1Stmt, params.ID, params.Quantity, params.ID)
	return r, err
}

// Update2 updates sample.
func Update2(params SampleStruct) (sql.Result, error) {
	err := params.Validate()
	if err != nil {
		return nil, err
	}

	r, err := getDB().Exec(_Update2Stmt, params.ID, params.Quantity, params.ID)
	return r, err
}
